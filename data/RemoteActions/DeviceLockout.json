{"id": "Device_Lockout_windows", "name": "Device Lockout", "description": "Passe \u00e0 0 la cl\u00e9 de registre CachedLogonsCount pour d\u00e9sactiver la r\u00e9tention des identifiants en cache\net interdire une connexion hors-ligne, affiche une campagne Engage pour notifier l'utilisateur du verrouillage en cours\nsuite \u00e0 d\u00e9tection d'un risque cyber, et le d\u00e9connecte pass\u00e9 un d\u00e9lai param\u00e9trable de quelques secondes\nlui permettant de sauvegarder son travail.\nUne mention l\u00e9gale est affich\u00e9e sur la mire de pr\u00e9-logon.\nScript d\u00e9velopp\u00e9 pour Windows 7 et 10.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "UID de la campagne \u00e0 afficher apr\u00e8s compl\u00e9tion du script", "id": "CampaignId", "name": "CampaignId", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Titre \u00e0 afficher sur la mire de pr\u00e9-logon", "id": "NoticeCaption", "name": "NoticeCaption", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Texte \u00e0 aficher sur la mire de pr\u00e9-logon", "id": "NoticeText", "name": "NoticeText", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "D\u00e9lai avec d\u00e9connexion des sessions, permettant de prendre connaissance de la campagne de notification et de sauvegarder son travail", "id": "DelaiLogoff", "name": "DelaiLogoff", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Device-Lockout.ps1", "script": ""}}}