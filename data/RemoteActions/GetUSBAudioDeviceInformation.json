{"id": "Get_USB_Audio_Device_Information_windows", "name": "Get USB Audio Device Information", "description": "Returns detailed information about connected USB audio devices. Useful for troubleshooting bad audio quality issues. The script is designed for Windows 10 and 7.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Information about connected USB audio device(s) (name, driver details and status)", "id": "USBAudioDeviceList", "name": "USBAudioDeviceList", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-USBAudioDeviceInformation.ps1", "script": ""}}}