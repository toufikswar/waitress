{"id": "Get_Teams_Info_windows", "name": "Get Teams Info", "description": "Shows the login errors of the last 24h, the deployment ring, network errors and calls made using Teams.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Checks if a authentication error has ocurred in the last 24h", "id": "AuthenticationErrors", "name": "AuthenticationErrors", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Name of the deployment ring the Microsoft Teams user is part of", "id": "DeploymentRing", "name": "DeploymentRing", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Checks if a network access error has ocurred in the last 24h", "id": "NetworkAccessDenied", "name": "NetworkAccessDenied", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Total number of calls initiated in the last 24h", "id": "Calls", "name": "Calls", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-TeamsInfo.ps1", "script": ""}}}