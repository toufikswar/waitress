{"id": "Get_McAfee_Agent_Status_windows", "name": "Get McAfee Agent Status", "description": "Returns information about the status of the McAfee Agent. Useful for ensuring that the device is in accordance with company policies.\nThe script is developed for Windows 10 and 7 and McAfee Agent 5.0 onwards.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Maximum number of hours since last policy update to consider the McAfee Agent compliant or not", "id": "MaxHoursSinceLastPolicyUpdate", "name": "MaxHoursSinceLastPolicyUpdate", "options": ["24"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Maximum number of hours since last EPO access to consider the McAfee Agent compliant or not", "id": "MaxHoursSinceLastEPOAccess", "name": "MaxHoursSinceLastEPOAccess", "options": ["24"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Version of the McAfee Agent", "id": "McAfeeAgentVersion", "name": "McAfeeAgentVersion", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "States if the McAfee Agent updated policies within allowed timeframe", "id": "PolicyUpdateCompliance", "name": "PolicyUpdateCompliance", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "States if the McAfee Agent contacted the EPO server within allowed timeframe", "id": "EPOAccessCompliance", "name": "EPOAccessCompliance", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "List of all EPO servers used by the McAfee Agent", "id": "EPOServersList", "name": "EPOServersList", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}, {"description": "Last EPO server used by the McAfee Agent", "id": "LastEPOServerUsed", "name": "LastEPOServerUsed", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-McAfeeAgentStatus.ps1", "script": ""}}}