{"id": "Set_Application_Experience_windows", "name": "Set Application Experience", "description": ". Provides the ability to enable or disable browser extensions which are required for Nexthink Application Experience.  Support is provided for the following browsers: Google Chrome, Mozilla Firefox and Microsoft Edge (Chromium-based). \nIf any of these browsers are present on the targeted device, the Application Experience extension will be enabled (or disabled depending on the input) on the device. \nPlease be aware that use of Application Experience requires the necessary product license", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Installs the Application Experience extension on all the available browsers", "id": "BrowserExtension", "name": "BrowserExtension", "allowCustomValue": false, "options": ["enable", "disable"], "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-ApplicationExperience.ps1", "script": ""}}}