{"id": "Get_Device_Manager_Information_windows", "name": "Get Device Manager Information", "description": "Retrieves the number of hidden input devices and the list of input devices which drivers are having troubles. Disabled devices are treated as errors but shown in a different colum.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Number of devices which have problems or are disabled", "id": "DevicesWithErrors", "name": "DevicesWithErrors", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of hidden devices", "id": "HiddenDevices", "name": "HiddenDevices", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "List of devices which are disabled or have problems. It has a CSV format with information about the device, drivers and error code", "id": "Details", "name": "Details", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-DeviceManagerInfo.ps1", "script": ""}}}