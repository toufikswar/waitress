{"id": "Start_Windows_Defender_Scan_windows", "name": "Start Windows Defender Scan", "description": "A Windows Defender scan is triggered automatically, depending on the type of scan and the time passed since the last one.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 720, "inputs": [{"description": "Maximum random delay set to avoid overloading the network. Provide number of seconds lower than 600", "id": "MaximumDelayInSeconds", "name": "MaximumDelayInSeconds", "options": ["30"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Type of scan to be executed. It can only be Quick, Full or Offline. For understanding the difference between Quick and Full scans, check this [https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-antivirus/run-scan-windows-defender-antivirus#quick-scan-versus-full-scan link]. An Offline scan will restart the device. To know more about Windows Defender Offline check this [https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-antivirus/windows-defender-offline link]", "id": "ScanType", "name": "ScanType", "options": ["Quick"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Location where the scan is executed during a Quick or Full scan", "id": "ScanLocation", "name": "ScanLocation", "options": ["C:"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Minimum number of days to have passed since the last scan to execute a new Quick or Full scan. Provide a number of days lower than 60. To force the execution of the scan in any case, provide a value of 0", "id": "LastScanThresholdInDays", "name": "LastScanThresholdInDays", "options": ["0"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Campaign launch to warn the end user about possible performance implications while executing a Full scan", "id": "FullScanCampaignId", "name": "FullScanCampaignId", "options": ["a6520726-6e1d-467c-9776-63483742e8da"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Campaign launch to warn the end user that the device will restart during an Offline scan", "id": "OfflineCampaignId", "name": "OfflineCampaignId", "options": ["f537d96c-801c-439a-bb14-f044bb1de632"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Start-WindowsDefenderScan.ps1", "script": ""}}}