{"id": "Set_OneDrive_Configuration_windows", "name": "Set OneDrive Configuration", "description": "Configures Microsoft OneDrive policy settings of SilentAccountConfig to automatically configure user account instead of having to provide credentials manually, FilesOnDemand to enable online access to files stored with the service, and UpdateRing to define in which update process the device should be.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Parameter responsible for OneDrive user account configuration, which hides initial popup window that asks to provide credentials. Accepted values are (Disabled/Enabled). In case of filling the input with an empty value (\"\"), the configuration will not be enforced", "id": "SilentAccountConfig", "name": "SilentAccountConfig", "options": ["Enabled"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Parameter manages online access to files that allows saving up space. Accepted values are (Disabled/Enabled). In case of filling the input with an empty value (\"\"), the configuration will not be enforced", "id": "FilesOnDemand", "name": "FilesOnDemand", "options": ["Enabled"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Parameter manages the OneDrive update process that will apply to target device. Accepted values are (Production/Enterprise/Insiders). In case of filling the input with an empty value (\"\"), the configuration will not be enforced", "id": "UpdateRing", "name": "UpdateRing", "options": ["Production"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-OneDriveConfiguration.ps1", "script": ""}}}