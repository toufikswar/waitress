{"id": "Clear_Chrome_settings_windows", "name": "Clear Chrome settings", "description": "Clears Chrome files according to the specified parameters. Useful for troubleshooting several browsing-related issues. The script is developed for Windows 10 and 7 and Chrome 65 onwards.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": false, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [{"description": "UID of the campaign to notify the user that Chrome must be closed", "id": "ClearChromeSettingsCampaignId", "name": "ClearChromeSettingsCampaignId", "options": ["29af984b-c282-4b01-85a6-5e676a02fadd"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "List of visited websites. Set it to \"true\" for deletion, \"false\" otherwise", "id": "BrowsingHistory", "name": "BrowsingHistory", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Cached images and sites. Set it to \"true\" for deletion, \"false\" otherwise", "id": "Cache", "name": "Cache", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Cookies saved on the device by websites. Set it to \"true\" for deletion, \"false\" otherwise", "id": "Cookies", "name": "Cookies", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "List of cleaned settings", "id": "CleanedSettings", "name": "CleanedSettings", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Clear-ChromeSettings.ps1", "script": ""}}}