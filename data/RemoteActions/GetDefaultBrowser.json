{"id": "Get_Default_Browser_windows", "name": "Get Default Browser", "description": "Retrieves browser name that is configured as default.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": false, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Name of the default browser. Empty, if no browser associated with HTTP(S) protocol", "id": "DefaultBrowser", "name": "DefaultBrowser", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-DefaultBrowser.ps1", "script": "77u/PCMNCi5TWU5PUFNJUw0KUmV0cmlldmVzIGJyb3dzZXIgbmFtZSB0aGF0IGlzIGNvbmZpZ3VyZWQgYXMgZGVmYXVsdC4NCg0KLkRFU0NSSVBUSU9ODQpSZXRyaWV2ZXMgYnJvd3NlciBuYW1lIHRoYXQgaXMgY29uZmlndXJlZCBhcyBkZWZhdWx0Lg0KDQouRlVOQ1RJT05BTElUWQ0KT24tZGVtYW5kDQoNCi5PVVRQVVRTDQpJRCAgTGFiZWwgICAgICAgICAgICAgICAgICAgICAgICAgICBUeXBlICAgICAgICAgICAgRGVzY3JpcHRpb24NCjEgICBEZWZhdWx0QnJvd3NlciAgICAgICAgICAgICAgICAgIFN0cmluZyAgICAgICAgICBOYW1lIG9mIHRoZSBkZWZhdWx0IGJyb3dzZXIuIEVtcHR5LCBpZiBubyBicm93c2VyIGFzc29jaWF0ZWQgd2l0aCBIVFRQKFMpIHByb3RvY29sDQoNCi5GVVJUSEVSIElORk9STUFUSU9ODQpUaGlzIHNjcmlwdCBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgdGVzdGVkIHdpdGggQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgSW50ZXJuZXQgRXhwbG9yZXIgYW5kIEVkZ2UuDQpBbnkgb3RoZXIgYnJvd3NlciB3aG9zZSBpbnN0YWxsYXRpb24gZm9sbG93cyBNaWNyb3NvZnQgc3RhbmRhcmRzIHNob3VsZCBiZSBlcXVhbGx5IHJlY29nbml6ZWQuDQoNCi5OT1RFUw0KQ29udGV4dDogICAgICAgICAgICBJbnRlcmFjdGl2ZVVzZXINClZlcnNpb246ICAgICAgICAgICAgMS4wLjAuMCAtIEluaXRpYWwgcmVsZWFzZQ0KTGFzdCBHZW5lcmF0ZWQ6ICAgICAxOSBKdW4gMjAxOSAtIDEyOjEyOjMyDQpDb3B5cmlnaHQgKEMpIDIwMTkgTmV4dGhpbmsgU0EsIFN3aXR6ZXJsYW5kDQojPg0KDQojIEVuZCBvZiBwYXJhbWV0ZXJzIGRlZmluaXRpb24NCg0KIw0KIyBDb25zdGFudHMgZGVmaW5pdGlvbg0KIw0KTmV3LVZhcmlhYmxlIC1OYW1lICdSRU1PVEVfQUNUSU9OX0RMTF9QQVRIJyBgDQogICAgLVZhbHVlICIkZW52Ok5FWFRISU5LXFJlbW90ZUFjdGlvbnNcbnh0cmVtb3RlYWN0aW9ucy5kbGwiIGANCiAgICAtT3B0aW9uIENvbnN0YW50IC1TY29wZSBTY3JpcHQNCg0KTmV3LVZhcmlhYmxlIC1OYW1lICdMT0NBTF9TWVNURU1fSURFTlRJVFknIGANCiAgICAtVmFsdWUgJ1MtMS01LTE4JyAtT3B0aW9uIENvbnN0YW50IC1TY29wZSBTY3JpcHQNCg0KTmV3LVZhcmlhYmxlIC1OYW1lICdSRUdfQ0xBU1NFU19ST09UJyBgDQogICAgLVZhbHVlICdIS0NVOlxTb2Z0d2FyZVxDbGFzc2VzJyAtT3B0aW9uIENvbnN0YW50IC1TY29wZSBTY3JpcHQNCk5ldy1WYXJpYWJsZSAtTmFtZSAnQVBQWF9QUk9QRVJUWV9OQU1FJyBgDQogICAgLVZhbHVlICdBcHBsaWNhdGlvbk5hbWUnIC1PcHRpb24gQ29uc3RhbnQgLVNjb3BlIFNjcmlwdA0KTmV3LVZhcmlhYmxlIC1OYW1lICdJTlRFUk5FVF9FWFBMT1JFUicgYA0KICAgIC1WYWx1ZSAnSW50ZXJuZXQgRXhwbG9yZXInIC1PcHRpb24gQ29uc3RhbnQgLVNjb3BlIFNjcmlwdA0KTmV3LVZhcmlhYmxlIC1OYW1lICdJTlRFUk5FVF9FWFBMT1JFUl9SRUdFWCcgYA0KICAgIC1WYWx1ZSAnXklFXC4nIC1PcHRpb24gQ29uc3RhbnQgLVNjb3BlIFNjcmlwdA0KTmV3LVZhcmlhYmxlIC1OYW1lICdPUEVSQV9CUk9XU0VSJyBgDQogICAgLVZhbHVlICdPcGVyYScgLU9wdGlvbiBDb25zdGFudCAtU2NvcGUgU2NyaXB0DQpOZXctVmFyaWFibGUgLU5hbWUgJ09QRVJBX0JST1dTRVJfUkVHRVgnIGANCiAgICAtVmFsdWUgJ15PcGVyYScgLU9wdGlvbiBDb25zdGFudCAtU2NvcGUgU2NyaXB0DQpOZXctVmFyaWFibGUgLU5hbWUgJ0RFRkFVTFRfQlJPV1NFUl9IVFRQX0tFWScgYA0KICAgIC1WYWx1ZSAnSEtDVTpcU29mdHdhcmVcTWljcm9zb2Z0XFdpbmRvd3NcU2hlbGxcQXNzb2NpYXRpb25zXFVybEFzc29jaWF0aW9uc1xodHRwXFVzZXJDaG9pY2UnIGANCiAgICAtT3B0aW9uIENvbnN0YW50IC1TY29wZSBTY3JpcHQNCk5ldy1WYXJpYWJsZSAtTmFtZSAnREVGQVVMVF9CUk9XU0VSX0hUVFBTX0tFWScgYA0KICAgIC1WYWx1ZSAnSEtDVTpcU29mdHdhcmVcTWljcm9zb2Z0XFdpbmRvd3NcU2hlbGxcQXNzb2NpYXRpb25zXFVybEFzc29jaWF0aW9uc1xodHRwc1xVc2VyQ2hvaWNlJyBgDQogICAgLU9wdGlvbiBDb25zdGFudCAtU2NvcGUgU2NyaXB0DQpOZXctVmFyaWFibGUgLU5hbWUgJ0FWQUlMQUJMRV9CUk9XU0VSU19SRUdJU1RSWV9LRVknIGANCiAgICAtVmFsdWUgJ0hLTE06XFNPRlRXQVJFXENsaWVudHNcU3RhcnRNZW51SW50ZXJuZXQnIGANCiAgICAtT3B0aW9uIENvbnN0YW50IC1TY29wZSBTY3JpcHQNCk5ldy1WYXJpYWJsZSAtTmFtZSAnVVJMX0FTU09DSUFUSU9OU19QUk9QRVJUWScgYA0KICAgIC1WYWx1ZSAnaHR0cCcgLU9wdGlvbiBDb25zdGFudCAtU2NvcGUgU2NyaXB0DQpOZXctVmFyaWFibGUgLU5hbWUgJ0RFRkFVTFRfUFJPUEVSVFknIGANCiAgICAtVmFsdWUgJyhEZWZhdWx0KScgLU9wdGlvbiBDb25zdGFudCAtU2NvcGUgU2NyaXB0DQpOZXctVmFyaWFibGUgLU5hbWUgJ0RFRkFVTFRfQlJPV1NFUl9JRF9QUk9QRVJUWScgYA0KICAgIC1WYWx1ZSAnUHJvZ0lkJyAtT3B0aW9uIENvbnN0YW50IC1TY29wZSBTY3JpcHQNCg0KIw0KIyBFbnZpcm9ubWVudCBjaGVja3MNCiMNCmZ1bmN0aW9uIEFkZC1OZXh0aGlua0RMTCB7DQogICAgaWYgKC1ub3QgKFRlc3QtUGF0aCAtUGF0aCAkUkVNT1RFX0FDVElPTl9ETExfUEFUSCkpIHsNCiAgICAgICAgdGhyb3cgJ05leHRoaW5rIFJlbW90ZSBBY3Rpb24gRExMIG5vdCBmb3VuZC4gJw0KICAgIH0NCiAgICBBZGQtVHlwZSAtUGF0aCAkUkVNT1RFX0FDVElPTl9ETExfUEFUSA0KfQ0KDQpmdW5jdGlvbiBUZXN0LVJ1bm5pbmdBc0ludGVyYWN0aXZlVXNlciB7DQogICAgJGN1cnJlbnRJZGVudGl0eSA9IEdldC1DdXJyZW50SWRlbnRpdHkNCiAgICBpZiAoJGN1cnJlbnRJZGVudGl0eSAtZXEgJExPQ0FMX1NZU1RFTV9JREVOVElUWSkgew0KICAgICAgICB0aHJvdyAnVGhpcyBzY3JpcHQgbXVzdCBiZSBydW4gYXMgSW50ZXJhY3RpdmVVc2VyLiAnDQogICAgfQ0KfQ0KZnVuY3Rpb24gR2V0LUN1cnJlbnRJZGVudGl0eSB7DQogICAgcmV0dXJuIFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c0lkZW50aXR5XTo6R2V0Q3VycmVudCgpLlVzZXIuVG9TdHJpbmcoKQ0KfQ0KDQpmdW5jdGlvbiBUZXN0LVN1cHBvcnRlZE9TVmVyc2lvbiB7DQogICAgJE9TVmVyc2lvbiA9IChHZXQtT1NWZXJzaW9uKSAtYXMgW3ZlcnNpb25dDQogICAgaWYgKC1ub3QgKCRPU1ZlcnNpb24pKSB7DQogICAgICAgIHRocm93ICdUaGlzIHNjcmlwdCBjb3VsZCBub3QgcmV0dXJuIE9TIHZlcnNpb24uICcNCiAgICB9DQogICAgaWYgKCgkT1NWZXJzaW9uLk1ham9yIC1uZSA2IC1vciAkT1NWZXJzaW9uLk1pbm9yIC1uZSAxKSAtYW5kIGANCiAgICAgICAgKCRPU1ZlcnNpb24uTWFqb3IgLW5lIDEwKSkgew0KICAgICAgICB0aHJvdyAnVGhpcyBzY3JpcHQgaXMgY29tcGF0aWJsZSB3aXRoIFdpbmRvd3MgNyBhbmQgMTAgb25seS4gJw0KICAgIH0NCn0NCg0KZnVuY3Rpb24gR2V0LU9TVmVyc2lvbiB7DQogICAgcmV0dXJuIEdldC1XbWlPYmplY3QgYA0KICAgICAgICAtQ2xhc3MgV2luMzJfT3BlcmF0aW5nU3lzdGVtIGANCiAgICAgICAgLUZpbHRlciAnUHJvZHVjdFR5cGUgPSAxJyAtRXJyb3JBY3Rpb24gU3RvcCB8IGANCiAgICAgICAgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgVmVyc2lvbg0KfQ0KDQojDQojIFJlZ2lzdHJ5IG1hbmFnZW1lbnQNCiMNCmZ1bmN0aW9uIFRlc3QtUmVnaXN0cnlLZXkgKFtzdHJpbmddJEtleSwgW3N0cmluZ10kUHJvcGVydHkpIHsNCiAgICByZXR1cm4gJG51bGwgLW5lIChHZXQtSXRlbVByb3BlcnR5IC1QYXRoICRLZXkgYA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLU5hbWUgJFByb3BlcnR5IGANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlKQ0KfQ0KDQpmdW5jdGlvbiBHZXQtUmVnaXN0cnlLZXkgKFtzdHJpbmddJEtleSwgW3N0cmluZ10kUHJvcGVydHkpIHsNCiAgICByZXR1cm4gKEdldC1JdGVtUHJvcGVydHkgLVBhdGggJEtleSBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIC1OYW1lICRQcm9wZXJ0eSBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlKS4kUHJvcGVydHkNCn0NCg0KIw0KIyBCcm93c2VyIG1hbmFnZW1lbnQNCiMNCmZ1bmN0aW9uIEdldC1Vc2VyRGVmYXVsdEJyb3dzZXIgew0KICAgIFtzdHJpbmddJGRlZmF1bHRCcm93c2VySFRUUCA9IEdldC1EZWZhdWx0QnJvd3Nlck5hbWUgLUtleSAkREVGQVVMVF9CUk9XU0VSX0hUVFBfS0VZDQogICAgW3N0cmluZ10kZGVmYXVsdEJyb3dzZXJIVFRQUyA9IEdldC1EZWZhdWx0QnJvd3Nlck5hbWUgLUtleSAkREVGQVVMVF9CUk9XU0VSX0hUVFBTX0tFWQ0KDQogICAgJEhUVFBCcm93c2VyU2V0ID0gLW5vdCAoW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGRlZmF1bHRCcm93c2VySFRUUCkpDQogICAgJEhUVFBTQnJvd3NlclNldCA9IC1ub3QgKFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRkZWZhdWx0QnJvd3NlckhUVFBTKSkNCg0KICAgIGlmICgkSFRUUEJyb3dzZXJTZXQgLWFuZCAkSFRUUFNCcm93c2VyU2V0KSB7DQogICAgICAgIGlmICgkZGVmYXVsdEJyb3dzZXJIVFRQIC1uZSAkZGVmYXVsdEJyb3dzZXJIVFRQUykgew0KICAgICAgICAgICAgdGhyb3cgJ0hUVFAgYW5kIEhUVFBTIGhhdmUgZGlmZmVyZW50IGRlZmF1bHQgYnJvd3NlcnMuICcNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiAkKGlmICgkSFRUUEJyb3dzZXJTZXQpIHsgJGRlZmF1bHRCcm93c2VySFRUUCB9IGVsc2UgeyAkZGVmYXVsdEJyb3dzZXJIVFRQUyB9KQ0KfQ0KDQpmdW5jdGlvbiBHZXQtRGVmYXVsdEJyb3dzZXJOYW1lIChbc3RyaW5nXSRLZXkpIHsNCiAgICBbc3RyaW5nXSRicm93c2VyQXNzb2NpYXRpb24gPSBHZXQtRGVmYXVsdEJyb3dzZXJBc3NvY2lhdGlvbiAtS2V5ICRLZXkNCiAgICBpZiAoW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGJyb3dzZXJBc3NvY2lhdGlvbikpIHsgcmV0dXJuICRudWxsIH0NCg0KICAgICRicm93c2VyTmFtZSA9IEdldC1Ccm93c2VyTmFtZSAtTmFtZSAkYnJvd3NlckFzc29jaWF0aW9uDQogICAgaWYgKC1ub3QgW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGJyb3dzZXJOYW1lKSkgeyByZXR1cm4gJGJyb3dzZXJOYW1lIH0NCg0KICAgICRicm93c2VyTmFtZSA9IEdldC1JbnRlcm5ldEV4cGxvcmVyTmFtZSAtTmFtZSAkYnJvd3NlckFzc29jaWF0aW9uDQogICAgaWYgKC1ub3QgW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJGJyb3dzZXJOYW1lKSkgeyByZXR1cm4gJGJyb3dzZXJOYW1lIH0NCg0KICAgICRicm93c2VyTmFtZSA9IEdldC1PcGVyYUJyb3dzZXJOYW1lIC1OYW1lICRicm93c2VyQXNzb2NpYXRpb24NCiAgICBpZiAoLW5vdCBbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkYnJvd3Nlck5hbWUpKSB7IHJldHVybiAkYnJvd3Nlck5hbWUgfQ0KDQogICAgcmV0dXJuIEdldC1BcHBYTmFtZSAtTmFtZSAkYnJvd3NlckFzc29jaWF0aW9uDQp9DQoNCmZ1bmN0aW9uIEdldC1EZWZhdWx0QnJvd3NlckFzc29jaWF0aW9uIChbc3RyaW5nXSRLZXkpIHsNCiAgICBpZiAoVGVzdC1SZWdpc3RyeUtleSAtS2V5ICRLZXkgLVByb3BlcnR5ICRERUZBVUxUX0JST1dTRVJfSURfUFJPUEVSVFkpIHsNCiAgICAgICAgcmV0dXJuIEdldC1SZWdpc3RyeUtleSAtS2V5ICRLZXkgLVByb3BlcnR5ICRERUZBVUxUX0JST1dTRVJfSURfUFJPUEVSVFkNCiAgICB9DQogICAgcmV0dXJuICRudWxsDQp9DQoNCmZ1bmN0aW9uIEdldC1Ccm93c2VyTmFtZSAoW3N0cmluZ10kTmFtZSkgew0KICAgICRicm93c2Vyc1JlZ2lzdHJ5S2V5cyA9IEdldC1BdmFpbGFibGVCcm93c2Vycw0KDQogICAgZm9yZWFjaCAoJGJyb3dzZXJzUmVnaXN0cnlLZXkgaW4gJGJyb3dzZXJzUmVnaXN0cnlLZXlzKSB7DQogICAgICAgICRiYXNlUGF0aCwgJFVSTEFzc29jaWF0aW9uc1BhdGggPSBOZXctVVJMQXNzb2NpYXRpb25QYXRoIGANCiAgICAgICAgICAgIC1Ccm93c2VyUmVnaXN0cnlLZXkgJGJyb3dzZXJzUmVnaXN0cnlLZXkNCg0KICAgICAgICBpZiAoVGVzdC1Ccm93c2VyTmFtZU1hdGNoIC1OYW1lICROYW1lIC1LZXkgJFVSTEFzc29jaWF0aW9uc1BhdGgpIHsNCiAgICAgICAgICAgIHJldHVybiBHZXQtU3RhbmRhcmRCcm93c2VyTmFtZSAtTmFtZSAkTmFtZSAtS2V5ICRiYXNlUGF0aA0KICAgICAgICB9DQogICAgfQ0KDQogICAgcmV0dXJuICRudWxsDQp9DQoNCmZ1bmN0aW9uIEdldC1BdmFpbGFibGVCcm93c2VycyB7DQogICAgaWYgKFRlc3QtUGF0aCAtUGF0aCAkQVZBSUxBQkxFX0JST1dTRVJTX1JFR0lTVFJZX0tFWSkgew0KICAgICAgICByZXR1cm4gR2V0LUNoaWxkSXRlbSAtUGF0aCAkQVZBSUxBQkxFX0JST1dTRVJTX1JFR0lTVFJZX0tFWQ0KICAgIH0NCiAgICByZXR1cm4gJG51bGwNCn0NCg0KZnVuY3Rpb24gTmV3LVVSTEFzc29jaWF0aW9uUGF0aCAoW3Bzb2JqZWN0XSRCcm93c2VyUmVnaXN0cnlLZXkpIHsNCiAgICAkYmFzZVBhdGggPSAkQnJvd3NlclJlZ2lzdHJ5S2V5Lk5hbWUuUmVwbGFjZSgnSEtFWV9MT0NBTF9NQUNISU5FJywnSEtMTTonKQ0KICAgICRVUkxBc3NvY2lhdGlvbnNQYXRoID0gIiRiYXNlUGF0aFxDYXBhYmlsaXRpZXNcVVJMQXNzb2NpYXRpb25zIg0KICAgIHJldHVybiAkYmFzZVBhdGgsICRVUkxBc3NvY2lhdGlvbnNQYXRoDQp9DQoNCmZ1bmN0aW9uIFRlc3QtQnJvd3Nlck5hbWVNYXRjaCAoW3N0cmluZ10kTmFtZSwgW3N0cmluZ10kS2V5KSB7DQogICAgaWYgKC1ub3QgKFRlc3QtUmVnaXN0cnlLZXkgLUtleSAkS2V5IC1Qcm9wZXJ0eSAkVVJMX0FTU09DSUFUSU9OU19QUk9QRVJUWSkpIHsNCiAgICAgICAgcmV0dXJuICRmYWxzZQ0KICAgIH0NCg0KICAgIGlmICgoR2V0LVJlZ2lzdHJ5S2V5IC1LZXkgJEtleSAtUHJvcGVydHkgJFVSTF9BU1NPQ0lBVElPTlNfUFJPUEVSVFkpIC1uZSAkTmFtZSkgew0KICAgICAgICByZXR1cm4gJGZhbHNlDQogICAgfQ0KDQogICAgcmV0dXJuICR0cnVlDQp9DQoNCmZ1bmN0aW9uIEdldC1TdGFuZGFyZEJyb3dzZXJOYW1lIChbc3RyaW5nXSROYW1lLCBbcHNvYmplY3RdJEtleSkgew0KICAgIGlmICgtbm90IChUZXN0LVJlZ2lzdHJ5S2V5IC1LZXkgJEtleSAtUHJvcGVydHkgJERFRkFVTFRfUFJPUEVSVFkpKSB7DQogICAgICAgIHRocm93ICJVbmFibGUgdG8gbWFwIGNvcnJlY3QgYnJvd3NlciBuYW1lIGZvciAkTmFtZS4gIg0KICAgIH0NCg0KICAgIHJldHVybiBHZXQtUmVnaXN0cnlLZXkgLUtleSAkS2V5IC1Qcm9wZXJ0eSAkREVGQVVMVF9QUk9QRVJUWQ0KfQ0KDQpmdW5jdGlvbiBHZXQtSW50ZXJuZXRFeHBsb3Jlck5hbWUgKFtzdHJpbmddJE5hbWUpIHsNCiAgICBpZiAoJE5hbWUgLW5vdG1hdGNoICRJTlRFUk5FVF9FWFBMT1JFUl9SRUdFWCkgeyByZXR1cm4gJG51bGwgfQ0KICAgIHJldHVybiAkSU5URVJORVRfRVhQTE9SRVINCn0NCg0KZnVuY3Rpb24gR2V0LU9wZXJhQnJvd3Nlck5hbWUgKFtzdHJpbmddJE5hbWUpIHsNCiAgICBpZiAoJE5hbWUgLW5vdG1hdGNoICRPUEVSQV9CUk9XU0VSX1JFR0VYKSB7IHJldHVybiAkbnVsbCB9DQogICAgcmV0dXJuICRPUEVSQV9CUk9XU0VSDQp9DQoNCmZ1bmN0aW9uIEdldC1BcHBYTmFtZSAoW3N0cmluZ10kTmFtZSkgew0KICAgICRwYXRoID0gIiRSRUdfQ0xBU1NFU19ST09UXCROYW1lXEFwcGxpY2F0aW9uIg0KICAgIGlmIChUZXN0LVBhdGggLVBhdGggJHBhdGgpIHsNCiAgICAgICAgJGFwcGxpY2F0aW9uTmFtZSA9IEdldC1SZWdpc3RyeUtleSAtS2V5ICRwYXRoIC1Qcm9wZXJ0eSAkQVBQWF9QUk9QRVJUWV9OQU1FDQogICAgICAgIHJldHVybiBGb3JtYXQtQXBwWE5hbWUgLU5hbWUgJGFwcGxpY2F0aW9uTmFtZQ0KICAgIH0NCiAgICByZXR1cm4gJG51bGwNCn0NCg0KZnVuY3Rpb24gRm9ybWF0LUFwcFhOYW1lIChbc3RyaW5nXSROYW1lKSB7DQogICAgJHJlc3VsdCA9ICROYW1lLlNwbGl0KCdfJylbMF0NCiAgICByZXR1cm4gJHJlc3VsdC5SZXBsYWNlKCdAeycsICcnKS5SZXBsYWNlKCdNaWNyb3NvZnQuJywgJycpDQp9DQoNCiMNCiMgTmV4dGhpbmsgRW5naW5lIHVwZGF0ZQ0KIw0KZnVuY3Rpb24gVXBkYXRlLUVuZ2luZU91dHB1dFZhcmlhYmxlcyAoW3N0cmluZ10kRGVmYXVsdEJyb3dzZXIpIHsNCiAgICBbTnh0XTo6V3JpdGVPdXRwdXRTdHJpbmcoJ0RlZmF1bHRCcm93c2VyJywgJERlZmF1bHRCcm93c2VyKQ0KfQ0KDQojDQojIE1haW4gc2NyaXB0IGZsb3cNCiMNCiRFeGl0Q29kZSA9IDANCiREZWZhdWx0QnJvd3NlciA9ICcnDQp0cnkgew0KICAgIEFkZC1OZXh0aGlua0RMTA0KICAgIFRlc3QtUnVubmluZ0FzSW50ZXJhY3RpdmVVc2VyDQogICAgVGVzdC1TdXBwb3J0ZWRPU1ZlcnNpb24NCg0KICAgICREZWZhdWx0QnJvd3NlciA9IEdldC1Vc2VyRGVmYXVsdEJyb3dzZXINCn0gY2F0Y2ggew0KICAgICRob3N0LnVpLldyaXRlRXJyb3JMaW5lKCRfLlRvU3RyaW5nKCkpDQogICAgJEV4aXRDb2RlID0gMQ0KfSBmaW5hbGx5IHsNCiAgICBVcGRhdGUtRW5naW5lT3V0cHV0VmFyaWFibGVzIC1EZWZhdWx0QnJvd3NlciAkRGVmYXVsdEJyb3dzZXINCiAgICBbRW52aXJvbm1lbnRdOjpFeGl0KCRFeGl0Q29kZSkNCn0NCg0KIyBTSUcgIyBCZWdpbiBzaWduYXR1cmUgYmxvY2sNCiMgTUlJajVRWUpLb1pJaHZjTkFRY0NvSUlqMWpDQ0k5SUNBUUV4RHpBTkJnbGdoa2dCWlFNRUFnRUZBREI1Qmdvcg0KIyBCZ0VFQVlJM0FnRUVvR3N3YVRBMEJnb3JCZ0VFQVlJM0FnRWVNQ1lDQXdFQUFBUVFIOHc3WUZsTENFNjNKTkxHDQojIEtYN3pVUUlCQUFJQkFBSUJBQUlCQUFJQkFEQXhNQTBHQ1dDR1NBRmxBd1FDQVFVQUJDQ04vZTJtck9jWStkYmwNCiMgaGJsYVRLdkd4SkREdE5qUkE1ejFIc3dEQ0lmQVJxQ0NFVHN3Z2dQRk1JSUNyYUFEQWdFQ0FoQUNyRndtYWd0QQ0KIyBtNDhMZWZLdVJpVjNNQTBHQ1NxR1NJYjNEUUVCQlFVQU1Hd3hDekFKQmdOVkJBWVRBbFZUTVJVd0V3WURWUVFLDQojIEV3eEVhV2RwUTJWeWRDQkpibU14R1RBWEJnTlZCQXNURUhkM2R5NWthV2RwWTJWeWRDNWpiMjB4S3pBcEJnTlYNCiMgQkFNVElrUnBaMmxEWlhKMElFaHBaMmdnUVhOemRYSmhibU5sSUVWV0lGSnZiM1FnUTBFd0hoY05NRFl4TVRFdw0KIyBNREF3TURBd1doY05NekV4TVRFd01EQXdNREF3V2pCc01Rc3dDUVlEVlFRR0V3SlZVekVWTUJNR0ExVUVDaE1NDQojIFJHbG5hVU5sY25RZ1NXNWpNUmt3RndZRFZRUUxFeEIzZDNjdVpHbG5hV05sY25RdVkyOXRNU3N3S1FZRFZRUUQNCiMgRXlKRWFXZHBRMlZ5ZENCSWFXZG9JRUZ6YzNWeVlXNWpaU0JGVmlCU2IyOTBJRU5CTUlJQklqQU5CZ2txaGtpRw0KIyA5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeHN6bGMrYjcxTHZsTFMweXB0L2xnVC9KelNWSnRuRXF3OVdVDQojIE5HZWlDaHl3WDJtbVFMSEV0N0tQMEppa3FVRlpPdFBjbE5ZODIzUTRwRXJNVFNXQzkwcWxVeEk0N3ZOSmJYR1INCiMgZm1PMnE2WmZ3NlNFK0U5aVViNzR4ZXpiT0pMakJ1VUlrUXpFS0VGVis4dGFpUlYrY2VnMXYwMXlDVDIrT2poUQ0KIyBXM2N4RzQyenh5UkZtcWVzYlFBVVdnUzN1aFByVVFxWVFVRWlUbVZoaDRGQlVLWjVYSW5lR1VwWDFTN21YUnhUDQojIExINll6Um9HRnFSb2M5QTBCQk5jb1hIVFdueFYyMTVrNFRlSE1GWUU1UkcwS1lBUzhYazVpS0lDRVh3blpyZUkNCiMgdDNqeXlncW9PS3NLWk1LL1psMlZoTUdoSlI2SFhScFFDeUFTekVHN2JndFJPTGhMeXdJREFRQUJvMk13WVRBTw0KIyBCZ05WSFE4QkFmOEVCQU1DQVlZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVXNUN0RhUVA0DQojIHYwY0IxSmdtR2dnQzcyTmtLOE13SHdZRFZSMGpCQmd3Rm9BVXNUN0RhUVA0djBjQjFKZ21HZ2dDNzJOa0s4TXcNCiMgRFFZSktvWklodmNOQVFFRkJRQURnZ0VCQUJ3YUJwZmMxNXlmUElobUJnaFhJZHNoUi9ncVo2cS9HREoyUUJCWA0KIyB3WXJ6ZXRrUlpZNDErcDc4UmJXZTJVd3hTN2lSNkVNc2pyTjR6dHZqVTNseDF1VWhsQUhhVlllYUpHVDJpbWJNDQojIDNwdzN6YWcwc1dtYkk4aWVlQ0lyY0VQalZVY3hZUm52V01XRkwwNHc5cUF4RmlQSTUrSmxGalBMdnhvYm9EMzQNCiMgeWw2TE1ZdGdDSWt0REFaY1VyZkUrUXFZMFJWZm54SytmRFpqT0wxRXBIL2tKaXNLeEpkcERlbU00c0FRVjdqSQ0KIyBkaEtSVmZKSWFkaThLZ0piRDBUVUlESGI5THB3SmwyUVlKNjhTeGNKTDdUTEhrTm95UWNud2RKYzkrb2h1V2dTDQojIG5EeWN2NTc4Z0Z5Ylk4M3NSNm9sSjJlZ04vTUFnbjFVMTZuNDZTNFRvM2ZvSDBvd2dnYXVNSUlGbHFBREFnRUMNCiMgQWhBS0dnMGJjbytVdUxkd0ZDQjhLZ3JFTUEwR0NTcUdTSWIzRFFFQkN3VUFNR3d4Q3pBSkJnTlZCQVlUQWxWVA0KIyBNUlV3RXdZRFZRUUtFd3hFYVdkcFEyVnlkQ0JKYm1NeEdUQVhCZ05WQkFzVEVIZDNkeTVrYVdkcFkyVnlkQzVqDQojIGIyMHhLekFwQmdOVkJBTVRJa1JwWjJsRFpYSjBJRVZXSUVOdlpHVWdVMmxuYm1sdVp5QkRRU0FvVTBoQk1pa3cNCiMgSGhjTk1qQXdPREUzTURBd01EQXdXaGNOTWpNd09ESXlNVEl3TURBd1dqQ0J3REVUTUJFR0N5c0dBUVFCZ2pjOA0KIyBBZ0VERXdKRFNERVZNQk1HQ3lzR0FRUUJnamM4QWdFQ0V3UldZWFZrTVIwd0d3WURWUVFQREJSUWNtbDJZWFJsDQojIElFOXlaMkZ1YVhwaGRHbHZiakVZTUJZR0ExVUVCUk1QUTBoRkxURXhNaTR3TURBdU5UYzVNUXN3Q1FZRFZRUUcNCiMgRXdKRFNERVBNQTBHQTFVRUJ4TUdVSEpwYkd4NU1SWXdGQVlEVlFRS0V3MU9SVmhVYUdsdWF5QlRMa0V1TVFzdw0KIyBDUVlEVlFRTEV3SlNSREVXTUJRR0ExVUVBeE1OVGtWWVZHaHBibXNnVXk1QkxqQ0NBaUl3RFFZSktvWklodmNODQojIEFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFMTWJyOGs1QjRVVDdFOSs2U2tvYTNJaHk4djZ2U0hXYTVUZnB0UG4NCiMgQjFKUTdCZ3N3NkVEQ0kvSHJJbGNSUkYrZmVYR1lQWWFrSjVuZzFja00yMnUvRnRBbXJsaGI1VkxGT2VNaXViLw0KIyBSNWNQUTZJaGpkQ25UaVZQckJiWWV2Q215SE9UZHFjNzRHRnlnQksrZy9aTFpxT1dKRGtod1ZpbVROVFAxUk8vDQojIEJlYzNKSTNycjBDdUlxcUd2Q3QvVHVjUHN6Vnl1S1JWaXc1Z3ZNa2F3UXZmd1Q4TW1MZkZrcjk4bHQ0QmxUWkcNCiMgU2tvUHVtRVMrYkpkV01UdGRUZlpJaytLUXY2MG9XbXNXbEkvTHhlK20xcUluQ0VETEZuU3NRSU4rSEdrYWJXNQ0KIyBVaUVKNmJEalpDSUI1UGhRWGp2MFdYTFRHWnFUY2JCZUJMSUFuMDZMOVRJSDZvQ0c4N1FsclhkeXNPRGNhcWlRDQojIFNrQUo3YlhRc2NmV3NSSFdQclJ6VTM2QTJtT3hES0VSR3hIM2lQRHhmVjlOQUViOGhkRlRmeEpSTWEraEVBcXQNCiMgNnF4NFB1VVpidTdtOFRyaCtmSEtvNVM5YndYa1ltaTBURE9OcFlFUW1iNytsZWZjSHFMTmFJZ3BmZEs1aC8wVg0KIyBsVWxwRHdsTkdYTWZFMmFCaE5SNkw1Tzk5cjExWTJxSkExT21NQmNQTm9ZN2xqWG1kTUh1MVY5L0RFMEpLNE9ZDQojIFZ4Ym5VVk1xVGYzL1ZnWnhHZWNZTU1mYW1qdjQyc1BGdk1kYUNqOEMzTjRjMGQ0c1dPbHRKa2pDbWk1Zkt3OXkNCiMgVUdMelV6V09meDl5MGFUUW45U2QveTY4Y0JQL0psLzFrd3MzeFA0T3Jzemw1dkFGZW5UUXd0T0hMZ3NvazBFRg0KIyBGdWFMQWdNQkFBR2pnZ0gxTUlJQjhUQWZCZ05WSFNNRUdEQVdnQlNQNkg3d2JUSnFBQVVqeDNDWGFqcVEvMnZxDQojIDFEQWRCZ05WSFE0RUZnUVVVbHVvelBDSW9ZQnl1RDRkVkJjQ2xidzQ2Mzh3TWdZRFZSMFJCQ3N3S2FBbkJnZ3INCiMgQmdFRkJRY0lBNkFiTUJrTUYwTklMVlpCVlVRdFEwaEZMVEV4TWk0d01EQXVOVGM1TUE0R0ExVWREd0VCL3dRRQ0KIyBBd0lIZ0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREF6QjdCZ05WSFI4RWREQnlNRGVnTmFBemhqRm9kSFJ3DQojIE9pOHZZM0pzTXk1a2FXZHBZMlZ5ZEM1amIyMHZSVlpEYjJSbFUybG5ibWx1WjFOSVFUSXRaekV1WTNKc01EZWcNCiMgTmFBemhqRm9kSFJ3T2k4dlkzSnNOQzVrYVdkcFkyVnlkQzVqYjIwdlJWWkRiMlJsVTJsbmJtbHVaMU5JUVRJdA0KIyBaekV1WTNKc01Fc0dBMVVkSUFSRU1FSXdOd1lKWUlaSUFZYjliQU1DTUNvd0tBWUlLd1lCQlFVSEFnRVdIR2gwDQojIGRIQnpPaTh2ZDNkM0xtUnBaMmxqWlhKMExtTnZiUzlEVUZNd0J3WUZaNEVNQVFNd2ZnWUlLd1lCQlFVSEFRRUUNCiMgY2pCd01DUUdDQ3NHQVFVRkJ6QUJoaGhvZEhSd09pOHZiMk56Y0M1a2FXZHBZMlZ5ZEM1amIyMHdTQVlJS3dZQg0KIyBCUVVITUFLR1BHaDBkSEE2THk5allXTmxjblJ6TG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeWRFVldRMjlrDQojIFpWTnBaMjVwYm1kRFFTMVRTRUV5TG1OeWREQU1CZ05WSFJNQkFmOEVBakFBTUEwR0NTcUdTSWIzRFFFQkN3VUENCiMgQTRJQkFRQVk2SUI0UG5OY3poZGVtVlZpZHRUOFhUMFArL0VqOWJiYU1JbVI2SEVMVGNZWDE5Z2prc0ZOVXJSNg0KIyAvWFVQZ2FqL25TcGxyNU9qM0RKNUpDUG8yQVZLd1kxbVVXUzJ1WW9aUmluRUFvZERmRVNxZlRpUjE5ODJ4cDcyDQojIGdvMzQ3R1RNbnBwazJFcGR1SWlvaStkY3diYncxRGYybkZ6STNGY1g3SDFVSVBkOE00cDNVQXQ1V0NpVk1QSFcNCiMgWHhyUXQ1bjhqeGdMY3Vzdk9SWFpxWk9zZFRsN0hacHNWSG5HVVk3ODdPdTBJSnh1RnNpVU02NGJLR3p2TnFxdA0KIyBZeUZ5Ujk5RXJDVHFkWjY2dXJhRmlsQWdqUHdhTEZ6SlV3NithSy93V3hLQjdRMHBpSUNwZVgxWDBJTFp1NTZHDQojIFIyMDZWRWNteFdJTFlqUUUyTlpjVCs3dmJVem1NSUlHdkRDQ0JhU2dBd0lCQWdJUUEvRzA0Vjg2Z3ZFVWxuaXoNCiMgMTloSFhEQU5CZ2txaGtpRzl3MEJBUXNGQURCc01Rc3dDUVlEVlFRR0V3SlZVekVWTUJNR0ExVUVDaE1NUkdsbg0KIyBhVU5sY25RZ1NXNWpNUmt3RndZRFZRUUxFeEIzZDNjdVpHbG5hV05sY25RdVkyOXRNU3N3S1FZRFZRUURFeUpFDQojIGFXZHBRMlZ5ZENCSWFXZG9JRUZ6YzNWeVlXNWpaU0JGVmlCU2IyOTBJRU5CTUI0WERURXlNRFF4T0RFeU1EQXcNCiMgTUZvWERUSTNNRFF4T0RFeU1EQXdNRm93YkRFTE1Ba0dBMVVFQmhNQ1ZWTXhGVEFUQmdOVkJBb1RERVJwWjJsRA0KIyBaWEowSUVsdVl6RVpNQmNHQTFVRUN4TVFkM2QzTG1ScFoybGpaWEowTG1OdmJURXJNQ2tHQTFVRUF4TWlSR2xuDQojIGFVTmxjblFnUlZZZ1EyOWtaU0JUYVdkdWFXNW5JRU5CSUNoVFNFRXlLVENDQVNJd0RRWUpLb1pJaHZjTkFRRUINCiMgQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2RUK2creXRSUHhaTStFZ1B5dWdEWFJ0dGZIb3l5c0dpeXM4WVNzT2pVUw0KIyBPcEtSdWxma3hNbnpMNmhJUExmV2J0eVhJcnBSZVdHdlF5OE50NXUwU1RHdVJGZytwS0dXcDRkUEkzN0RiR1VrDQojIGtGVStvY29qZk1WQzZjUjZZa1diZmQ1amRNdWVZeVg0aEpxYXJVVlBybjBmeUJQTGRadko0ZUdLK0FzTW1QVEsNCiMgUHRCRnFub2VwVmlUTmpTK0t5NHJNVmhtdERJUW41M3dVcUh2NkQ3VGR2SkFXdHo2YWowYlM2MTJzSXhjN2phNg0KIyBnK293cUV6ZThRc3FXRUdJcmdDSnF3UFJGb0lnSW5iclhsUTRFbUxoMG5BazIrMGZjTkprQ1lBdDRyYWR6aC95DQojIHV5SHpiTnZZc3hsN2lsQ2Y3K3cyQ2x5YXQwclRDS0E1ZWYzZHZ6MDZDU1VDQXdFQUFhT0NBMWd3Z2dOVU1CSUcNCiMgQTFVZEV3RUIvd1FJTUFZQkFmOENBUUF3RGdZRFZSMFBBUUgvQkFRREFnR0dNQk1HQTFVZEpRUU1NQW9HQ0NzRw0KIyBBUVVGQndNRE1IOEdDQ3NHQVFVRkJ3RUJCSE13Y1RBa0JnZ3JCZ0VGQlFjd0FZWVlhSFIwY0RvdkwyOWpjM0F1DQojIFpHbG5hV05sY25RdVkyOXRNRWtHQ0NzR0FRVUZCekFDaGoxb2RIUndPaTh2WTJGalpYSjBjeTVrYVdkcFkyVnkNCiMgZEM1amIyMHZSR2xuYVVObGNuUklhV2RvUVhOemRYSmhibU5sUlZaU2IyOTBRMEV1WTNKME1JR1BCZ05WSFI4RQ0KIyBnWWN3Z1lRd1FLQStvRHlHT21oMGRIQTZMeTlqY213ekxtUnBaMmxqWlhKMExtTnZiUzlFYVdkcFEyVnlkRWhwDQojIFoyaEJjM04xY21GdVkyVkZWbEp2YjNSRFFTNWpjbXd3UUtBK29EeUdPbWgwZEhBNkx5OWpjbXcwTG1ScFoybGoNCiMgWlhKMExtTnZiUzlFYVdkcFEyVnlkRWhwWjJoQmMzTjFjbUZ1WTJWRlZsSnZiM1JEUVM1amNtd3dnZ0hFQmdOVg0KIyBIU0FFZ2dHN01JSUJ0ekNDQWJNR0NXQ0dTQUdHL1d3REFqQ0NBYVF3T2dZSUt3WUJCUVVIQWdFV0xtaDBkSEE2DQojIEx5OTNkM2N1WkdsbmFXTmxjblF1WTI5dEwzTnpiQzFqY0hNdGNtVndiM05wZEc5eWVTNW9kRzB3Z2dGa0JnZ3INCiMgQmdFRkJRY0NBakNDQVZZZWdnRlNBRUVBYmdCNUFDQUFkUUJ6QUdVQUlBQnZBR1lBSUFCMEFHZ0FhUUJ6QUNBQQ0KIyBRd0JsQUhJQWRBQnBBR1lBYVFCakFHRUFkQUJsQUNBQVl3QnZBRzRBY3dCMEFHa0FkQUIxQUhRQVpRQnpBQ0FBDQojIFlRQmpBR01BWlFCd0FIUUFZUUJ1QUdNQVpRQWdBRzhBWmdBZ0FIUUFhQUJsQUNBQVJBQnBBR2NBYVFCREFHVUENCiMgY2dCMEFDQUFRd0JRQUM4QVF3QlFBRk1BSUFCaEFHNEFaQUFnQUhRQWFBQmxBQ0FBVWdCbEFHd0FlUUJwQUc0QQ0KIyBad0FnQUZBQVlRQnlBSFFBZVFBZ0FFRUFad0J5QUdVQVpRQnRBR1VBYmdCMEFDQUFkd0JvQUdrQVl3Qm9BQ0FBDQojIGJBQnBBRzBBYVFCMEFDQUFiQUJwQUdFQVlnQnBBR3dBYVFCMEFIa0FJQUJoQUc0QVpBQWdBR0VBY2dCbEFDQUENCiMgYVFCdUFHTUFid0J5QUhBQWJ3QnlBR0VBZEFCbEFHUUFJQUJvQUdVQWNnQmxBR2tBYmdBZ0FHSUFlUUFnQUhJQQ0KIyBaUUJtQUdVQWNnQmxBRzRBWXdCbEFDNHdIUVlEVlIwT0JCWUVGSS9vZnZCdE1tb0FCU1BIY0pkcU9wRC9hK3JVDQojIE1COEdBMVVkSXdRWU1CYUFGTEUrdzJrRCtMOUhBZFNZSmhvSUF1OWpaQ3ZETUEwR0NTcUdTSWIzRFFFQkN3VUENCiMgQTRJQkFRQVpNMG9NZ1RNMzI2MDJ5ZVRKT3J1MUd5NTZvdUwwUTBJWG5yOU9vVTNoc2R2cGdkMmZBZkxraU5YcA0KIyAvZ245SWNIc1hZRFM4TmJCUThMK2R5dmIrZGVSTTg1czFiSVpPK1l1MXNtVFQ0aEFqczNoOVg3eEQ4WlpWbkxvDQojIDYycEJ2UnpWUnRWOFNjcG1PQlhCditDUmNIZUgzTW1OTWNrTUthSXo3WTNpaDgySmpUOGIvOVhnR3BlTGZOcHQNCiMgKzZqR3NqcG1hM3NCczgzWXBqVHNFZ0dybFZpbHhGTlhxR0RtNXdJU29Ma2paS0pOdTN5QkpXUWh2cy91UWhoRA0KIyBsN3VsTndhdlRmOG1wVTFoUyt4R1FiaGx6cmg1bmdpV0M0R01panVQeDVtTW95cHVtRzFlWWNhV3Q0cTVZUzJUDQojIHVPc09CRVBYOWY2bThHTFVtV3Fsd2NId1pKU0FNWUlTQURDQ0Vmd0NBUUV3Z1lBd2JERUxNQWtHQTFVRUJoTUMNCiMgVlZNeEZUQVRCZ05WQkFvVERFUnBaMmxEWlhKMElFbHVZekVaTUJjR0ExVUVDeE1RZDNkM0xtUnBaMmxqWlhKMA0KIyBMbU52YlRFck1Da0dBMVVFQXhNaVJHbG5hVU5sY25RZ1JWWWdRMjlrWlNCVGFXZHVhVzVuSUVOQklDaFRTRUV5DQojIEtRSVFDaG9ORzNLUGxMaTNjQlFnZkNvS3hEQU5CZ2xnaGtnQlpRTUVBZ0VGQUtDQmhEQVlCZ29yQmdFRUFZSTMNCiMgQWdFTU1Rb3dDS0FDZ0FDaEFvQUFNQmtHQ1NxR1NJYjNEUUVKQXpFTUJnb3JCZ0VFQVlJM0FnRUVNQndHQ2lzRw0KIyBBUVFCZ2pjQ0FRc3hEakFNQmdvckJnRUVBWUkzQWdFVk1DOEdDU3FHU0liM0RRRUpCREVpQkNCbHZJM0VVOTcxDQojIDNndDVWOFZvNjhNZVJGb3h6NWI4dUVOUmdXN0dMcVM1K1RBTkJna3Foa2lHOXcwQkFRRUZBQVNDQWdDVzJ1VVENCiMgWFE4TnRrOVUxRzVJWGEzeDBUaHVkc0xxRGJvSFNVK3g3RHQ2UWpoQno3T0NjQTdBeVB2Mmh1OGJhKzNvM2QzNA0KIyBZd2JGSk1QM1gzcDlxZzAwODZHVGRwMVFzUEtEQW16cG1yeG9nejB5aHlDalAzK3BaOEN3QWVYampTclNqSm5wDQojIE1MWDRQTzNGcXZmV2w1RVNvbW51ZTZ0RFZ1dHFXTTFLTldtUHVnN25rWStJc1EwaWIvaDRJZ3grMXJwdG42OFENCiMgY1o3bWlMMW5VaG05MlRXNCt2V1RHTUpuZWFlUFhXSWY3dmVuU3FMQkoxbURGMlJPaWpjT3M3YkFpOFdjeDNxMQ0KIyBCSEZOVEpjeXl0czB6djIzeTU4RmFxdmF6WWVCTXQ3bXY2RmJpWGhHdGZXNS92RStvYjhyTm9FbW1hV2FOUmxWDQojIHBiQlJLYTJ2cEM4WkNyaXcxZ2ZrbGtZMi9Gc3BHTGpmWGdDaTBqVHF3V3hlcXVlQTl3OUVXWVpqbU5VbkNyMnANCiMgN0s5NGFvZlhTL1VWVjJld2syUzl6M0JMOVFLVUlFcUloNTdxclJpZklKZys1Y2tTVGYzL0RoWElveDNxWVF0RQ0KIyAyOE40NXkyTWJDM3BMWUc1WkNOSnpPeXA0Y0tFbmpZeFJ4TlppY2p4WVM0bVNvY0ltV2xkNnJxSk4xczd5aGd2DQojIG1uckQyeE40RnVucTlHa3BIU2NmV0lCc0VuWklqVmdSdlJJcHZRNmNXOEQxM2RCVGVwOG1VcDUzUVYzakR3a1oNCiMgd3RLM1JWZ0h2dkJEOXJJWkVaQi9SR0FBZWdHczI3OVBEa0prRHUxMWpiYk5RQzFWbFI1N2VKU092QUJKcXhiQQ0KIyBtLzZHcDM0eFRqSzkwKzZobEM5WENYeUNIN29iSGFhZVptMVNoNkdDRHNrd2dnN0ZCZ29yQmdFRUFZSTNBd01CDQojIE1ZSU90VENDRHJFR0NTcUdTSWIzRFFFSEFxQ0NEcUl3Z2c2ZUFnRURNUTh3RFFZSllJWklBV1VEQkFJQkJRQXcNCiMgZUFZTEtvWklodmNOQVFrUUFRU2dhUVJuTUdVQ0FRRUdDV0NHU0FHRy9Xd0hBVEF4TUEwR0NXQ0dTQUZsQXdRQw0KIyBBUVVBQkNBNytLcWxTVE9SVGE5WXVYWHQrSUhRbnpVOVNGNVI0clhNT1lzL0JmUE81Z0lSQUlKOFpxSkJsVkN2DQojIG1nektTenJFMThVWUR6SXdNakF3T0RFNU1UWXpOekk0V3FDQ0M3c3dnZ2FDTUlJRmFxQURBZ0VDQWhBRXpUK0YNCiMgYUs1MnhodXcvbkZnektkdE1BMEdDU3FHU0liM0RRRUJDd1VBTUhJeEN6QUpCZ05WQkFZVEFsVlRNUlV3RXdZRA0KIyBWUVFLRXd4RWFXZHBRMlZ5ZENCSmJtTXhHVEFYQmdOVkJBc1RFSGQzZHk1a2FXZHBZMlZ5ZEM1amIyMHhNVEF2DQojIEJnTlZCQU1US0VScFoybERaWEowSUZOSVFUSWdRWE56ZFhKbFpDQkpSQ0JVYVcxbGMzUmhiWEJwYm1jZ1EwRXcNCiMgSGhjTk1Ua3hNREF4TURBd01EQXdXaGNOTXpBeE1ERTNNREF3TURBd1dqQk1NUXN3Q1FZRFZRUUdFd0pWVXpFWA0KIyBNQlVHQTFVRUNoTU9SR2xuYVVObGNuUXNJRWx1WXk0eEpEQWlCZ05WQkFNVEcxUkpUVVZUVkVGTlVDMVRTRUV5DQojIE5UWXRNakF4T1MweE1DMHhOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPbGsNCiMgTlp6NnFaaGxaQnZrRjl5NEtUYk1ad2xZaFUwdzRNbi81VHM4RVNoUXJ3Y3g0bDBKR01MMmlZeHBDQVFqNEhjdA0KIyBuUlhsdU9paGFvNy8xSzdTZWhiditFRzFIVGwxd2M4dnA2eEZmcFJ0ckFNQm1UeGlQbjU2L1VXWE1iVDZ0OWxDDQojIFBxZFZtOTlhVDFnQ3FESnBJaE8raTRJdHhwaXJhNXUweWZKbEVReDBEYkx3Q0paMHhPaXlTS0toRktYNCt1R0oNCiMgY0VRN2plLzdwUFREdWIwVUxPc01LQ2NsZ0tzUVN4WVNZQXRwSW94T3pjYlZzbVZaSWVCOExCS05jQTZQaXNyZw0KIyAwOWV6T1hkUTBFSXNMbnJPbkdkNk9IZFVRUDlQbFFRZzFPdkl6b2NVQ1A0ZGdOM1E1eXQ0NnI4ZmNNYnVRaFpUDQojIE5rV2JVeGxKWXAxNkFwdVZGS01DQXdFQUFhT0NBemd3Z2dNME1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlYNCiMgSFJNQkFmOEVBakFBTUJZR0ExVWRKUUVCL3dRTU1Bb0dDQ3NHQVFVRkJ3TUlNSUlCdndZRFZSMGdCSUlCdGpDQw0KIyBBYkl3Z2dHaEJnbGdoa2dCaHYxc0J3RXdnZ0dTTUNnR0NDc0dBUVVGQndJQkZoeG9kSFJ3Y3pvdkwzZDNkeTVrDQojIGFXZHBZMlZ5ZEM1amIyMHZRMUJUTUlJQlpBWUlLd1lCQlFVSEFnSXdnZ0ZXSG9JQlVnQkJBRzRBZVFBZ0FIVUENCiMgY3dCbEFDQUFid0JtQUNBQWRBQm9BR2tBY3dBZ0FFTUFaUUJ5QUhRQWFRQm1BR2tBWXdCaEFIUUFaUUFnQUdNQQ0KIyBid0J1QUhNQWRBQnBBSFFBZFFCMEFHVUFjd0FnQUdFQVl3QmpBR1VBY0FCMEFHRUFiZ0JqQUdVQUlBQnZBR1lBDQojIElBQjBBR2dBWlFBZ0FFUUFhUUJuQUdrQVF3QmxBSElBZEFBZ0FFTUFVQUF2QUVNQVVBQlRBQ0FBWVFCdUFHUUENCiMgSUFCMEFHZ0FaUUFnQUZJQVpRQnNBSGtBYVFCdUFHY0FJQUJRQUdFQWNnQjBBSGtBSUFCQkFHY0FjZ0JsQUdVQQ0KIyBiUUJsQUc0QWRBQWdBSGNBYUFCcEFHTUFhQUFnQUd3QWFRQnRBR2tBZEFBZ0FHd0FhUUJoQUdJQWFRQnNBR2tBDQojIGRBQjVBQ0FBWVFCdUFHUUFJQUJoQUhJQVpRQWdBR2tBYmdCakFHOEFjZ0J3QUc4QWNnQmhBSFFBWlFCa0FDQUENCiMgYUFCbEFISUFaUUJwQUc0QUlBQmlBSGtBSUFCeUFHVUFaZ0JsQUhJQVpRQnVBR01BWlFBdU1Bc0dDV0NHU0FHRw0KIyAvV3dERlRBZkJnTlZIU01FR0RBV2dCVDB0dUVnSGY0cHJ0TGtZYVd5b2lXeXlCYzFiakFkQmdOVkhRNEVGZ1FVDQojIFZsTVB3Y1lIcDAzWDJHNVhjb0JRVE9Uc25zRXdjUVlEVlIwZkJHb3dhREF5b0RDZ0xvWXNhSFIwY0RvdkwyTnkNCiMgYkRNdVpHbG5hV05sY25RdVkyOXRMM05vWVRJdFlYTnpkWEpsWkMxMGN5NWpjbXd3TXFBd29DNkdMR2gwZEhBNg0KIyBMeTlqY213MExtUnBaMmxqWlhKMExtTnZiUzl6YUdFeUxXRnpjM1Z5WldRdGRITXVZM0pzTUlHRkJnZ3JCZ0VGDQojIEJRY0JBUVI1TUhjd0pBWUlLd1lCQlFVSE1BR0dHR2gwZEhBNkx5OXZZM053TG1ScFoybGpaWEowTG1OdmJUQlANCiMgQmdnckJnRUZCUWN3QW9aRGFIUjBjRG92TDJOaFkyVnlkSE11WkdsbmFXTmxjblF1WTI5dEwwUnBaMmxEWlhKMA0KIyBVMGhCTWtGemMzVnlaV1JKUkZScGJXVnpkR0Z0Y0dsdVowTkJMbU55ZERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DDQojIEFRRUFMb09oUkFWS0JPTzVNbEw2MllId0dydjRDWTBqdVQzWWtxSG1SaHhLTDI1NlBHTnVOeGVqR3I5WUk3SkQNCiMgbkpTRFRqa0pzQ3pveCtIaXpPM0xlV3ZPM2lNQlIrMlZWSUhnZ0hzU3NhOENocWs2YzJyKytKL0JqZEVoak9RcA0KIyBnc09LQzJBQUFwMGZSOFNmdEFwb1UzOWFFS2I0SXViNFU1SXhYOWlDZ3kxdEUwS3VnOEVRVHFRazlFZWMzZzhpDQojIGNuZGNmMC9wT1pnclY1SkUxKzl1azlsRHh3UXpZMUUzVnA1SEJCSERvMWhVSWRqaWpsYlhTVDlYL0FxZkkxNTcNCiMgOUpTTjNaMGF1OTk2S3FiU1JhWlZESS8yVElyeWxzK0pSdHd4c3BHUW8xOHpNR0JWOWZ4ck1LeWg3ZVJIVGpPZQ0KIyBaMm9vdFUzQzdWdVhndmpMcVFoc1V3bTA5ekNDQlRFd2dnUVpvQU1DQVFJQ0VBcWhKZGJXTWh0K1FlUUYyamFYDQojIHdoVXdEUVlKS29aSWh2Y05BUUVMQlFBd1pURUxNQWtHQTFVRUJoTUNWVk14RlRBVEJnTlZCQW9UREVScFoybEQNCiMgWlhKMElFbHVZekVaTUJjR0ExVUVDeE1RZDNkM0xtUnBaMmxqWlhKMExtTnZiVEVrTUNJR0ExVUVBeE1iUkdsbg0KIyBhVU5sY25RZ1FYTnpkWEpsWkNCSlJDQlNiMjkwSUVOQk1CNFhEVEUyTURFd056RXlNREF3TUZvWERUTXhNREV3DQojIE56RXlNREF3TUZvd2NqRUxNQWtHQTFVRUJoTUNWVk14RlRBVEJnTlZCQW9UREVScFoybERaWEowSUVsdVl6RVoNCiMgTUJjR0ExVUVDeE1RZDNkM0xtUnBaMmxqWlhKMExtTnZiVEV4TUM4R0ExVUVBeE1vUkdsbmFVTmxjblFnVTBoQg0KIyBNaUJCYzNOMWNtVmtJRWxFSUZScGJXVnpkR0Z0Y0dsdVp5QkRRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEDQojIGdnRVBBRENDQVFvQ2dnRUJBTDNRTXU1THpZOS8zYW02Z3BuRk9WUW9WN1lqU3NRT0IwVXpVUkI5MFBsOVRXaCsNCiMgNTdhZzlJMnppT1NYdjJNaGtKaS9FN3hYMDhQaGZnaldhaFFBT1BjdUhqdnV6S2IyTWxuK1gyVS80SnZyNDBaSA0KIyBCaHBWZmdzbmZzQ2k5YURnM2lJL0R2OStsZnZ6bzdvaVBoaXNFZVR3bVFOdE80VjhDZFB1WGNpYUMxVGpxQWx4DQojIGErRFBJaEFQZGM5eGNrNEtyZDlBT2x5M1VlR2hlUlRHVFNRak1GMjg3RHhnYXF3dkI4ejk4T3BIMlloUVh2MW0NCiMgYmxaaEp5bUpoRkhtZ3VkR1VQMlVLaXluNUhVK3VwZ1BoSCtmTVJUV3JkWHlaTXQ3SGdYUWhCbHlGL0VYQnU4OQ0KIyB6ZFpON3daQy9hSlRLaytGSGNRZFBLL1AycXdROWQyc3JPbFcvNU1DQXdFQUFhT0NBYzR3Z2dIS01CMEdBMVVkDQojIERnUVdCQlQwdHVFZ0hmNHBydExrWWFXeW9pV3l5QmMxYmpBZkJnTlZIU01FR0RBV2dCUkY2Nkt2OUpMTGdqRXQNCiMgVVl1bnB5R2Q4MjNJRHpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lCaGpBVA0KIyBCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RDREI1QmdnckJnRUZCUWNCQVFSdE1Hc3dKQVlJS3dZQkJRVUhNQUdHDQojIEdHaDBkSEE2THk5dlkzTndMbVJwWjJsalpYSjBMbU52YlRCREJnZ3JCZ0VGQlFjd0FvWTNhSFIwY0RvdkwyTmgNCiMgWTJWeWRITXVaR2xuYVdObGNuUXVZMjl0TDBScFoybERaWEowUVhOemRYSmxaRWxFVW05dmRFTkJMbU55ZERDQg0KIyBnUVlEVlIwZkJIb3dlREE2b0RpZ05vWTBhSFIwY0RvdkwyTnliRFF1WkdsbmFXTmxjblF1WTI5dEwwUnBaMmxEDQojIFpYSjBRWE56ZFhKbFpFbEVVbTl2ZEVOQkxtTnliREE2b0RpZ05vWTBhSFIwY0RvdkwyTnliRE11WkdsbmFXTmwNCiMgY25RdVkyOXRMMFJwWjJsRFpYSjBRWE56ZFhKbFpFbEVVbTl2ZEVOQkxtTnliREJRQmdOVkhTQUVTVEJITURnRw0KIyBDbUNHU0FHRy9Xd0FBZ1F3S2pBb0JnZ3JCZ0VGQlFjQ0FSWWNhSFIwY0hNNkx5OTNkM2N1WkdsbmFXTmxjblF1DQojIFkyOXRMME5RVXpBTEJnbGdoa2dCaHYxc0J3RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSEdWRXVsUmgxWnANCiMgemUvZDJueXFZM3F6ZU04R04wQ0U3MHVFdjhyUEF3TDl4YWZERGlCQ0xLOTM4eXNmRENGYUtyY0ZOQjFxcnBuNA0KIyBKNkptdndtcVlOOTJwRHFURC9peTBkaDhHV0xvWG9JbEhzUzZISHNzSWVMV1d5d1VOVU1FYUxMYmRRTGdjc2VZDQojIDFqeGs1UjlJRUJoZmlUaGhUV0pHSklkampKRlNMSzhwaWVWNEg5WUxGS1dBMXhKSGNMTjExWk9GazM2MmttZjcNCiMgVTJHSnFQVnJsc0QwV0drTmZNZ0JzYmtvZGJlWlk0VWlqR0hLZVpSK1dmeU1EK052dFFFbXRteWw3b2RSSWVSWQ0KIyBZSnU2REMwcmJhTEVmcnZFSlN0SEFnaDhTYTRUdHVGOFFrSW94aGhXejBFMHRtWmR0blI3OVZZeklpOGlOckpMDQojIG9rcVYyUFdtamxJeGdnSk5NSUlDU1FJQkFUQ0JoakJ5TVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU0NCiMgUkdsbmFVTmxjblFnU1c1ak1Sa3dGd1lEVlFRTEV4QjNkM2N1WkdsbmFXTmxjblF1WTI5dE1URXdMd1lEVlFRRA0KIyBFeWhFYVdkcFEyVnlkQ0JUU0VFeUlFRnpjM1Z5WldRZ1NVUWdWR2x0WlhOMFlXMXdhVzVuSUVOQkFoQUV6VCtGDQojIGFLNTJ4aHV3L25GZ3pLZHRNQTBHQ1dDR1NBRmxBd1FDQVFVQW9JR1lNQm9HQ1NxR1NJYjNEUUVKQXpFTkJnc3ENCiMgaGtpRzl3MEJDUkFCQkRBY0Jna3Foa2lHOXcwQkNRVXhEeGNOTWpBd09ERTVNVFl6TnpJNFdqQXJCZ3NxaGtpRw0KIyA5dzBCQ1JBQ0RERWNNQm93R0RBV0JCUURKYjFRWHRxV01DM0NMMCtnSGt3b3ZpZzB4VEF2QmdrcWhraUc5dzBCDQojIENRUXhJZ1FnVGZWbTdURUJWUW5scFl6RERTRnlrWkVlNW9ja0x0MGZ3VlF2bE45cko3Z3dEUVlKS29aSWh2Y04NCiMgQVFFQkJRQUVnZ0VBSFUvUUdZdVcrejZCNzd2N2VOVVdVSmNqM2x2bTdJeGlBaWxrR0RodGZPMzc0N1MrVTgzbw0KIyBydjYwZnpBM3gzRHdPL1drUmQ5VEptbURJM05GMmFKejRVVXdFcGtqd3lMam9JYTRhck5UYVQwZlp1UVJ4MDVJDQojIEowYnA0WDYzVDdPcTlEUHlobVRCWUlaVEZ3SGp0SWVrVFhybmhlU09RSDZSVWlqbFZuWVdVcWxFNFpWUnJkYUsNCiMgcVBpZlVHbmp4TWpJWnE4QVk1TGhqTnRLc1VrclBZSmYxRGJHMWFWdFcyMGhGQk15TEJCZy9FcEN4bkd4N2ppTg0KIyBhNVdFU2dDZmlKQzcyYlU2TUQ1U2JLekMvS2JBSGxLbEI0NGdtTmtOeExOTDFzQzc2U1ZyZGYza2htbHhEeWtxDQojIHBkODlKcWZ4VTdDNzRmOWh5Q3lpZG1FTUtxSndUd2dXZWc9PQ0KIyBTSUcgIyBFbmQgc2lnbmF0dXJlIGJsb2NrDQo="}}}