{"id": "Get_Interface_Connection_Status_windows", "name": "Get Interface Connection Status", "description": "Gets the interface current connection operational status, i.e., whether it is up or down, and the duration of such connection.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "The name of the Interface which status and connection time we want to retrieve", "id": "InterfaceAlias", "name": "InterfaceAlias", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "The name of the DNS Domain which is associated to the network adapter that we are using", "id": "DNSDomain", "name": "DNSDomain", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "This field will denote whether the Interface is 'Up' or not", "id": "InterfaceOperational", "name": "InterfaceOperational", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "This field will indicate the time since an IP was leased through a DHCP mechanism", "id": "ConnectionDuration", "name": "ConnectionDuration", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-InterfaceConnectionStatus.ps1", "script": ""}}}