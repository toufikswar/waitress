{"id": "Set_Fast_Start_Status_windows", "name": "Set Fast Start Status", "description": "Enables or disables the Windows OS Fast Start feature based on the input provided.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Desired status of the Fast Start. Valid status are 'Enabled' or 'Disabled'", "id": "FastStartStatus", "name": "FastStartStatus", "options": ["Enabled"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-FastStartStatus.ps1", "script": ""}}}