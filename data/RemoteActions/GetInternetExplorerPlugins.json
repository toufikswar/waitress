{"id": "Get_Internet_Explorer_Plugins_windows", "name": "Get Internet Explorer Plugins", "description": "Retrieves the plugins currently configured for Internet Explorer and displays them in alphabetical order. The script is designed for Internet Explorer 11.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Number of Internet Explorer plugins available", "id": "InternetExplorerPluginsCount", "name": "InternetExplorerPluginsCount", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Internet Explorer plugin names", "id": "InternetExplorerPluginNames", "name": "InternetExplorerPluginNames", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-InternetExplorerPlugins.ps1", "script": ""}}}