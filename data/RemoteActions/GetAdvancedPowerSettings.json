{"id": "Get_Advanced_Power_Settings_windows", "name": "Get Advanced Power Settings", "description": "Compares the current applied settings with the ones provided as inputs.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 720, "inputs": [{"description": "Adaptive brightness", "id": "AdaptiveBrightness", "name": "AdaptiveBrightness", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Java script timer frequency", "id": "JavaScriptTimerFrequency", "name": "JavaScriptTimerFrequency", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Slide show", "id": "SlideShow", "name": "SlideShow", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Wireless adapter settings", "id": "WirelessAdapterSettings", "name": "WirelessAdapterSettings", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "USB selective suspend", "id": "USBSelectiveSuspend", "name": "USBSelectiveSuspend", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Graphics power plan", "id": "GraphicsPowerPlan", "name": "GraphicsPowerPlan", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "PCI express link power mgmt", "id": "PCIExpressLinkPowerMgmt", "name": "PCIExpressLinkPowerMgmt", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "multimedia settings", "id": "MultimediaSettings", "name": "MultimediaSettings", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Video playback quality bias", "id": "VideoPlaybackQualityBias", "name": "VideoPlaybackQualityBias", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "When playing video", "id": "Whenplayingvideo", "name": "Whenplayingvideo", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Number of matches", "id": "MatchCount", "name": "MatchCount", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of items which do not match", "id": "NotMatchCount", "name": "NotMatchCount", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-AdvancedPowerSettings.ps1", "script": ""}}}