{"id": "HoneyWell_Collector_Fix_windows", "name": "HoneyWell Collector Fix", "description": "Executes collector team executable.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 720, "inputs": [], "outputs": [{"description": "Result of the execution", "id": "ExecutionResult", "name": "ExecutionResult", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "HoneyWellCollectorFix.ps1", "script": ""}}}