{"id": "Enable_Xtray_windows", "name": "Enable Xtray", "description": "Enables the new, cross-platform, Engage Tray (xTray), which brings a series of improvements and fixes (e.g. handling orphaned campaigns, better focus protection etc.), enhanced accessibility features, and supports the upcoming Engage solution on the Nexthink Experience platform.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Select between xtray or nxtray", "id": "NxVersion", "name": "NxVersion", "options": ["xtray"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Enable-Xtray-fix.ps1", "script": ""}}}