{"id": "Invoke_Windows_Update_windows", "name": "Invoke Windows Update", "description": "ADVANCED SCRIPT\nRestarts Windows Update service and starts BITS service (if needed). It forces the device to scan for system updates. The script is designed for Windows 10 and 7.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 720, "inputs": [{"description": "Maximum random delay set to avoid virtual environment and network overload. Provide number of seconds less than 600", "id": "MaximumDelayInSeconds", "name": "MaximumDelayInSeconds", "options": ["30"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Invoke-WindowsUpdate.ps1", "script": ""}}}