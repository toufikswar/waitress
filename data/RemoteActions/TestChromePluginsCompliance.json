{"id": "Test_Chrome_Plugins_Compliance", "name": "Test Chrome Plugins Compliance", "description": "Compares a list of required Chrome plugins against the current ones installed on the device.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [{"description": "List of comma separated plugins names to check if they are installed. Plugin names must be provided for exact match. To check the status and/or version compliance you can use three different formats. To check only the version, 'name' ('version'). To check only the status, 'name' (Enabled/Disabled). Or to check both, 'name' ('version'; Enabled/Disabled). E.g. Gmail, Docs (Enabled), Google Drive (34.67.0.2; Disabled), Chrome Media Router (7719.805.0.3)", "id": "PluginsToCheck", "name": "PluginsToCheck", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": true}, {"description": "When 'false', the compliance is met when all provided plugins match the installed ones. When 'true', the compliance is met whet all plugins listed match with the installed ones and those are the only plugins installed", "id": "StrictCompliance", "name": "StrictCompliance", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": true}], "outputs": [{"description": "Returns if device is compliant", "id": "PluginCompliance", "name": "PluginCompliance", "type": "uint32", "usedByWindows": true, "usedByMacOs": true}, {"description": "List of expected plugins that are not installed", "id": "MissingPlugins", "name": "MissingPlugins", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": true}, {"description": "List of plugins with a different version than the desired one", "id": "IncorrectVersionPlugins", "name": "IncorrectVersionPlugins", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": true}, {"description": "List of plugins with a different status than the desired one", "id": "IncorrectStatusPlugins", "name": "IncorrectStatusPlugins", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": true}, {"description": "List of installed plugins not listed in PluginsToCheck", "id": "OtherPlugins", "name": "OtherPlugins", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": true}], "scriptWindows": {"name": "Test-ChromePluginsCompliance.ps1", "script": ""}, "scriptMacOs": {"name": "test-chrome-plugin-compliance.tar.gz", "script": ""}}}