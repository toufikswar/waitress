{"id": "Set_Collector_String_Tag_windows", "name": "Set Collector String Tag", "description": "Sets the string tag nxtcfg property in the Nexthink Collector.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "String tag that will identify the endpoint", "id": "StringTag", "name": "StringTag", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-CollectorStringTag.ps1", "script": ""}}}