{"id": "Copy_Skype_Log_Files_windows", "name": "Copy Skype Log Files", "description": "During execution, script zips and copies collected Skype log files to the network shared folder provided as an input parameter. This script only works with Windows 10.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 720, "inputs": [{"description": "Absolute path to the network shared folder where zipped Skype log files should be copied. It should be provided in UNC format (e.g. \\\\Server\\SharedFolderName)", "id": "NetworkPath", "name": "NetworkPath", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Maximum random delay set to avoid server overload. Provide number of seconds less than 600", "id": "MaximumDelayInSeconds", "name": "MaximumDelayInSeconds", "options": ["30"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Output zip file created in network shared folder provided as an input parameter", "id": "OutputNetworkPath", "name": "OutputNetworkPath", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Copy-SkypeLogFiles.ps1", "script": ""}}}