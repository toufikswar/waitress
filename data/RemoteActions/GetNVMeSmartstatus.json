{"id": "Get_NVMe_Smart_status_windows", "name": "Get NVMe Smart status", "description": "Displays the wear (expected life and duration) of NVMe disks as per their internal smart interface information.\nSee [https://en.wikipedia.org/wiki/Wear_leveling Wear leveling] and [https://en.wikipedia.org/wiki/S.M.A.R.T. S.M.A.R.T.] for more information.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Disk friendly name followed by its remaining wear percentage", "id": "DeviceName", "name": "DeviceName", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Disk SMART reported usage ratio minus current disk Wear", "id": "DeviceSmart", "name": "DeviceSmart", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Disk 2 friendly name followed by its remaining wear percentage", "id": "Device2Name", "name": "Device2Name", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Disk 2 SMART reported usage ratio minus current disk Wear", "id": "Device2Smart", "name": "Device2Smart", "type": "real", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-NvmeSmartStatus.ps1", "script": ""}}}