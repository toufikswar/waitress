{"id": "Disable_Windows_Telemetry_windows", "name": "Disable Windows Telemetry", "description": "Configures Data Collection Group Policy as 'Security' to limit data sent to Microsoft to obligatory only.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [], "scriptWindows": {"name": "Disable-WindowsTelemetry.ps1", "script": ""}}}