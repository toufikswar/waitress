{"id": "Set_Chrome_Plugins_windows", "name": "Set Chrome Plugins", "description": "Sets a list of plugins to be installed or banned by editing Chrome Policies. Removing previous policies is also possible. The script is designed for Windows 10 and 7, and Chrome 65 onwards.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Campaign Id to invoke when Chrome is needed to be closed", "id": "CampaignId", "name": "CampaignId", "options": ["5001563d-6f0f-4cb7-8dbd-bbec37e4acb0"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Plugin Id, or a comma-separated list of plugin Ids to be banned on the device. Type \"\" to not change this policy", "id": "BannedPlugins", "name": "BannedPlugins", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Plugin Id, or a comma-separated list of plugin Ids to be installed on the device. Type \"\" to not change this policy", "id": "MandatoryPlugins", "name": "MandatoryPlugins", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Set if the previous Chrome policies have to be removed before applying the new ones stated in the previous parameters. Set it to \"true\" for deletion, \"false\" otherwise", "id": "RemovePreviousPolicies", "name": "RemovePreviousPolicies", "options": ["false"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-ChromePlugins.ps1", "script": ""}}}