{"id": "Get_Frameworks_Version_windows", "name": "Get Frameworks Version", "description": "Retrieves information about the .NET, Python and Java versions installed on the device.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Highest version of .NET installed in the device", "id": "DotNetVersion", "name": "DotNetVersion", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Highest version of Python installed in the device", "id": "PythonVersion", "name": "PythonVersion", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Highest version of Java installed in the device", "id": "JavaVersion", "name": "JavaVersion", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-FrameworksVersion.ps1", "script": ""}}}