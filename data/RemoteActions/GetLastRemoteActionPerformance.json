{"id": "Get_Last_Remote_Action_Performance_windows", "name": "Get Last Remote Action Performance", "description": "Retrieves information about the performance of the last remote action executed by the Collector on targeted device.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Last executed remote action performance information (UID, execution date, average CPU, etc.)", "id": "LastRemoteActionPerformance", "name": "LastRemoteActionPerformance", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-LastRemoteActionPerformance.ps1", "script": ""}}}