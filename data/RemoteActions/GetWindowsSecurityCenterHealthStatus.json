{"id": "Get_Windows_Security_Center_Health_Status_windows", "name": "Get Windows Security Center Health Status", "description": "Returns information about health status of Windows Security Center components, that includes Firewall, AutoUpdate,\n AntiVirus, AntiSpyware, InternetSettings, UserAccountControl and Windows Security Center monitoring service. Possible values are:\n* Good - Does not require attention,\n* Poor - Device could be at risk,\n* NotMonitored - Not monitored by Windows Security Center,\n* Snooze - Indicates Windows Security Center is not actively protecting device.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "The aggregation of all anti-spyware products for target device", "id": "AntiSpywareStatus", "name": "AntiSpywareStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The aggregation of all antivirus products for target device", "id": "AntiVirusStatus", "name": "AntiVirusStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The automatic update settings for target device", "id": "AutoUpdateStatus", "name": "AutoUpdateStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The aggregation of all firewalls for target device", "id": "FirewallStatus", "name": "FirewallStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The settings that restrict the access of web sites in each of the Internet zones for target device", "id": "InternetSettingsStatus", "name": "InternetSettingsStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The User Account Control settings for target device", "id": "UserAccountControlStatus", "name": "UserAccountControlStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The running state of the Windows Security Center service on target device", "id": "SecurityCenterServiceStatus", "name": "SecurityCenterServiceStatus", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-WindowsSecurityCenterStatus.ps1", "script": ""}}}