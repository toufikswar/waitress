{"id": "Get_Consumption_Information_windows", "name": "Get Consumption Information", "description": "Gathers the consumption in kWh of the CPU, display, network and disk from the current day and the total consumption of the computer provided by Windows.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Kilograms of CO2 emitted for each kw/hour in the country where the device is located", "id": "KgCO2e", "name": "KgCO2e", "options": ["0"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Overall CPU energy consumption for all the processes in the current day in Wh", "id": "CPUEnergyConsumption", "name": "CPUEnergyConsumption", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Overall display energy consumption for all the processes in the current day in Wh", "id": "DisplayEnergyConsumption", "name": "DisplayEnergyConsumption", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Overall network energy consumption for all the processes in the current day in Wh", "id": "NetworkEnergyConsumption", "name": "NetworkEnergyConsumption", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Overall disk energy consumption for all the processes in the current day in Wh", "id": "DiskEnergyConsumption", "name": "DiskEnergyConsumption", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Overall energy consumption for all the processes in the current day in Wh", "id": "TotalEnergyConsumption", "name": "TotalEnergyConsumption", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Overall CO2 emitted based on the consumption in the current day and the kgCO2e  input parameter", "id": "TotalCO2Emitted", "name": "TotalCO2Emitted", "type": "real", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-ConsumptionInfo.ps1", "script": ""}}}