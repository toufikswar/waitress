{"id": "Enable_Office_365_Auto_update_windows", "name": "Enable Office 365 Auto-update", "description": "Enables Office 365 auto-update in case this one was disabled. Additionally, it allows to hide the button that lets user disable auto-update on Office applications.\nAction will have effect when Office applications are re-opened.\n\n'''''Warning:''' This Remote Action starts the simultaneous download of Microsoft Office 365 updates on all targeted devices. Please ensure that the available network capacity is appropriate for the number of targeted devices.''", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Hide button that allows to disable Office auto-update (true/false)", "id": "HideDisableButton", "name": "HideDisableButton", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Enable-Office365AutoUpdate.ps1", "script": ""}}}