{"id": "Get_Service_Information_windows", "name": "Get Service Information", "description": "The script returns the current status and startup type of each service specified in the parameters. Useful for verifying that the status of critical services (e.g. Antivirus, SCCM agent, core business applications, etc.) is in accordance with corporate policies.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Comma-separated list of services whose status and startup type are requested", "id": "ServiceName", "name": "ServiceName", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Name, current status, and startup type of the requested service(s)", "id": "ServiceInformation", "name": "ServiceInformation", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-ServiceInformation.ps1", "script": ""}}}