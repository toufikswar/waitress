{"id": "Invoke_SCCM_Upgrade_to_Windows_11_windows", "name": "Invoke SCCM Upgrade to Windows 11", "description": "Creates a scheduled task that triggers SCCM Task Sequence to Upgrade to Windows 11 using the information received from the campaign.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 720, "inputs": [{"description": "ID of a campaign that will be displayed to the user before triggering the Task Sequence with the execution delay options (10 minutes, 1 hour, 6 hours or cancel the process)", "id": "CampaignId", "name": "CampaignId", "options": ["1a9a4a72-ec04-4b9e-a196-76728044d224"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "ID of the Task Sequence", "id": "TaskSequenceId", "name": "TaskSequenceId", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Invoke-SCCMUpgradeToWin11.ps1", "script": ""}}}