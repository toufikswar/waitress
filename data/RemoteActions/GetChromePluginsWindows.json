{"id": "Get_Chrome_Plugins_Windows", "name": "Get Chrome Plugins Windows", "description": "Retrieves the plugins currently configured for Chrome, in alphabetical order, displaying version and status.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Number of Chrome plugins available", "id": "ChromePluginsCount", "name": "ChromePluginsCount", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Chrome plugins names, followed by version and status", "id": "ChromePlugins", "name": "ChromePlugins", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-ChromePlugins.ps1", "script": ""}}}