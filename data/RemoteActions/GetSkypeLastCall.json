{"id": "Get_Skype_Last_Call_windows", "name": "Get Skype Last Call", "description": "Obtains Skype last call information (date, quality, connection, microphone, speaker, etc.). The script is designed for Windows 10 and 7 and Skype for Business 2015 and 2016.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "List with Skype last call information", "id": "SkypeLastCallInformation", "name": "SkypeLastCallInformation", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-SkypeLastCall.ps1", "script": ""}}}