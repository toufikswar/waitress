{"id": "Test_Domain_Connection_windows", "name": "Test Domain Connection", "description": "Checks if the device is joined to the domain, as well as the domain connection status including the last time when the device updated the password.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Name and the controller that device is joined to", "id": "Domain", "name": "Domain", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Date when device last time updated password with the domain", "id": "LastDevicePasswordUpdateDate", "name": "LastDevicePasswordUpdateDate", "type": "datetime", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of days since device last time updated its password with the domain", "id": "DaysSinceLastDevicePasswordUpdate", "name": "DaysSinceLastDevicePasswordUpdate", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Test-DomainConnection.ps1", "script": ""}}}