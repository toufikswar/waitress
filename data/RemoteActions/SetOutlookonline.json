{"id": "Set_Outlook_online_windows", "name": "Set Outlook online", "description": "Checks if Outlook is working offline, and sets it to online if it is not already.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [{"description": "UID of the campaign to notify user that Outlook must be restarted. If it's an empty GUID, the campaign won't be called", "id": "CampaignId", "name": "CampaignId", "options": ["3a47999a-4c69-11e8-842f-0ed5f89f718b"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-OutlookOnline.ps1", "script": ""}}}