{"id": "Remove_Credentials_From_Credential_Manager_windows", "name": "Remove Credentials From Credential Manager", "description": "Removes stored user credentials from Windows Credential Manager, to assist with the problem of locking account. After completing action presents internal password reset webpage using default browser. Uses campaign to inform user about the removal, can be configured to skip campaign notification.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [{"description": "Intranet webpage to be displayed for user to reset password. Absolute path to target page should be provided, for example http(s)://resetpage.myintranet.com. This parameter is optional and can be empty", "id": "PasswordResetWebpage", "name": "PasswordResetWebpage", "options": ["''"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "UID of informative campaign about clearing stored user credentials. Provide empty guid to skip display of the campaign", "id": "CampaignId", "name": "CampaignId", "options": ["ab66ba04-b4bd-4a7a-a0f3-c49359072f99"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Remove-CredentialsFromCredentialManager.ps1", "script": ""}}}