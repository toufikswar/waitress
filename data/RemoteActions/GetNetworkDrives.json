{"id": "Get_Network_Drives_windows", "name": "Get Network Drives", "description": "Retrieves the network drives for a user on a device.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Active mapped network drives", "id": "MappedNetworkDrives", "name": "MappedNetworkDrives", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}, {"description": "Active mapped network drives (used only if character count exceeded 1020)", "id": "OtherMappedNetworkDrives", "name": "OtherMappedNetworkDrives", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}, {"description": "Active mapped network drive letters in string format separated by comma", "id": "MappedNetworkDrivesString", "name": "MappedNetworkDrivesString", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-NetworkDrives.ps1", "script": ""}}}