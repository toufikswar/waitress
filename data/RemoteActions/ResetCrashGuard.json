{"id": "Reset_CrashGuard_windows", "name": "Reset CrashGuard", "description": "ADVANCED SCRIPT\nResets the Collector CrashGuard count and restarts the Collector driver. The script is designed for Windows 10 and 7.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [], "scriptWindows": {"name": "Reset-CrashGuard.ps1", "script": ""}}}