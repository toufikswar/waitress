{"id": "Get_Local_Speed_to_Gateway_windows", "name": "Get Local Speed to Gateway", "description": "Retrieves the linkspeed and performs a test of latency and packet loss percentage against the default gateway.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 720, "inputs": [{"description": "Maximum random delay set to avoid network overload. Provide number of seconds lower than 600", "id": "MaximumDelayInSeconds", "name": "MaximumDelayInSeconds", "options": ["30"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "The speed at which the device is linked to the gateway", "id": "LinkSpeed", "name": "LinkSpeed", "type": "real", "usedByWindows": true, "usedByMacOs": false}, {"description": "Response time in milliseconds obtained from the gateway", "id": "RoundTripTime", "name": "RoundTripTime", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Percentage of packet loss", "id": "PacketLossPercentage", "name": "PacketLossPercentage", "type": "real", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-LocalSpeedToGateway.ps1", "script": ""}}}