{"id": "Get_Failed_Logins_windows", "name": "Get Failed Logins", "description": "Obtains information about all failed login attempts. The script can be successfully executed only on devices with 'Audit Logon Events' policy enabled and Windows 10 or Windows 7 installed.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 720, "inputs": [{"description": "Maximum random delay set to avoid overloading server hosting virtual machines. Provide number of seconds less than 600", "id": "MaximumDelayInSeconds", "name": "MaximumDelayInSeconds", "options": ["30"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Information about failed login attempts (user name, event time, logon failure status code, logon type code)", "id": "FailedLogins", "name": "FailedLogins", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of failed login attempts. It always shows full number of failed logins even when number of displayed events in 'FailedLogins' output parameter has been truncated due to limited output capacity", "id": "FailedLoginsCount", "name": "FailedLoginsCount", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-FailedLogins.ps1", "script": ""}}}