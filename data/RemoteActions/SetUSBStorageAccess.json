{"id": "Set_USB_Storage_Access_windows", "name": "Set USB Storage Access", "description": "Sets USB storage access by modifying group policies. The script is designed for Windows 10 and 7.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "UID of the campaign to notify user that the device must be restarted. Use an empty GUID (00000000-0000-0000-0000-000000000000) or empty value \"\" to avoid the Campaign", "id": "CampaignId", "name": "CampaignId", "options": ["3e1bb228-a9ee-415a-94c4-61f5a97722b1"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Deny removable device execute access. Type \"true\" for denying execution, \"false\" otherwise", "id": "DenyUSBStorageExecuteAccess", "name": "DenyUSBStorageExecuteAccess", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Deny removable device read access. Type \"true\" for denying reading, \"false\" otherwise", "id": "DenyUSBStorageReadAccess", "name": "DenyUSBStorageReadAccess", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Deny removable device write access. Type \"true\" for denying writing, \"false\" otherwise", "id": "DenyUSBStorageWriteAccess", "name": "DenyUSBStorageWriteAccess", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-USBStorageAccess.ps1", "script": ""}}}