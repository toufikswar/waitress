{"id": "Update_Group_Policy_Settings_windows", "name": "Update Group Policy Settings", "description": "ADVANCED SCRIPT\nRefreshes computer or user Group Policy settings using the 'gpupdate' command. The script is designed for Windows 10 and 7.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "INTERACTIVE_USER", "timeoutSeconds": 1200, "inputs": [{"description": "Group Policy type to be updated. Choose whether to update the \"user\" or the \"computer\" policies", "id": "GroupPolicyTarget", "name": "GroupPolicyTarget", "options": ["user"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Reapplies all policy settings. Set it to \"true\" to apply all policy settings, not just those that have changed, \"false\" otherwise", "id": "Force", "name": "Force", "options": ["False"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Maximum random delay set to avoid domain controller overload. Provide number of seconds", "id": "MaximumDelayInSeconds", "name": "MaximumDelayInSeconds", "options": ["600"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "User who is currently logged in", "id": "LoggedUser", "name": "LoggedUser", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Update-GroupPolicy.ps1", "script": ""}}}