{"id": "Get_Windows_Defender_Information_windows", "name": "Get Windows Defender Information", "description": "Provides a set of fields with information about engine, product version, full and quick scans age, definition files (last update) and status of several components.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": false, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Version of the Windows Defender Engine component", "id": "EngineVersion", "name": "EngineVersion", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Version of the Windows Defender Product", "id": "ProductVersion", "name": "ProductVersion", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of days since that the last full scan was performed", "id": "FullScanAge", "name": "FullScanAge", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of days since that the last quick scan was performed", "id": "QuickScanAge", "name": "QuickScanAge", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of days since the last anti spyware definition update", "id": "AntiSpywareSignatureAge", "name": "AntiSpywareSignatureAge", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of days since the last anti virus definition update", "id": "AntivirusSignatureAge", "name": "AntivirusSignatureAge", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "Number of days since the last network inspection system definition update", "id": "NISSignatureAge", "name": "NISSignatureAge", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "If anti spyware protection is enabled or not", "id": "AntiSpywareEnabled", "name": "AntiSpywareEnabled", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "If anti virus protection is enabled or not", "id": "AntivirusEnabled", "name": "AntivirusEnabled", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "If behavior monitor component is enabled or not", "id": "BehaviorMonitorEnabled", "name": "BehaviorMonitorEnabled", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "If Internet downloads, Outlook and attachments protection is enabled or not", "id": "IoavProtectionEnabled", "name": "IoavProtectionEnabled", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "If network inspection system is enabled or not", "id": "NISEnabled", "name": "NISEnabled", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}, {"description": "If on access protection is enabled or not", "id": "OnAccessProtectionEnabled", "name": "OnAccessProtectionEnabled", "type": "uint32", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-WindowsDefenderInfo.ps1", "script": ""}}}