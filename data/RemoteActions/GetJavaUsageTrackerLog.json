{"id": "Get_Java_Usage_Tracker_Log_windows", "name": "Get Java Usage Tracker Log", "description": "Retrieves relevant content from the Java Usage Tracker log configured with Enable-JavaUsageTracker Remote Action.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [], "outputs": [{"description": "Includes Java start type, Java main class name, Java version and Java architecture", "id": "JavaDetails", "name": "JavaDetails", "type": "list_of_strings", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-JavaUsageTrackerLog.ps1", "script": ""}}}