{"id": "Set_Certificate_windows", "name": "Set Certificate", "description": "Detects whether a specific certificate is expired, if expired a new certificate can be downloaded and installed on the necessary stores.", "purpose": ["REMEDIATION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": true}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "URL where the certificate can be downloaded from", "id": "DownloadUrl", "name": "DownloadUrl", "options": ["https://win10x641809.blob.core.windows.net/autopilot/Nexthink%20Remote%20Actions_29thJan2021.cer"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}, {"description": "Thumbprint of the certificate to check", "id": "CertificateThumbprint", "name": "CertificateThumbprint", "options": ["29f4f3b59210ed784e9c57d61f5957237e4c55d0"], "allowCustomValue": false, "usedByWindows": true, "usedByMacOs": false}], "outputs": [], "scriptWindows": {"name": "Set-Certificate.ps1", "script": "77u/PCMNCi5TWU5PUFNJUw0KSW5zdGFsbHMgYSBuZXcgY2VydGlmaWNhdGUgaWYgbmVlZGVkLg0KDQouREVTQ1JJUFRJT04NCkRldGVjdHMgd2hldGhlciBhIHNwZWNpZmljIGNlcnRpZmljYXRlIGlzIGV4cGlyZWQsIGlmIGV4cGlyZWQgYSBuZXcgY2VydGlmaWNhdGUgY2FuIGJlIGRvd25sb2FkZWQgYW5kIGluc3RhbGxlZCBvbiB0aGUgbmVjZXNzYXJ5IHN0b3Jlcy4NCg0KLkZVTkNUSU9OQUxJVFkNClJlbWVkaWF0aW9uDQoNCi5JTlBVVFMNCklEICBMYWJlbCAgICAgICAgICAgICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uDQoxICAgRG93bmxvYWRVcmwgICAgICAgICAgICAgICAgICAgICBVUkwgd2hlcmUgdGhlIGNlcnRpZmljYXRlIGNhbiBiZSBkb3dubG9hZGVkIGZyb20NCjIgICBDZXJ0aWZpY2F0ZVRodW1icHJpbnQgICAgICAgICAgIFRodW1icHJpbnQgb2YgdGhlIGNlcnRpZmljYXRlIHRvIGNoZWNrDQoNCi5SRVNUUklDVElPTlMNCi0gVGhpcyBSZW1vdGUgQWN0aW9uIGlzIG9ubHkgdmFsaWQgZm9yIENvZ25pemFudCBkb21haW5zIChjdHMgYW5kIGN0cy5vbm1pY3Jvc29mdCkNCi0gVGhpcyBSZW1vdGUgQWN0aW9uIHdpbGwgbm8gbG9uZ2VyIHdvcmsgYWZ0ZXIgdGhlIDAxLzAyLzIwMjINCg0KLk5PVEVTDQpDb250ZXh0OiAgICAgICAgICAgIExvY2FsU3lzdGVtDQpWZXJzaW9uOiAgICAgICAgICAgIDEuMC4wLjAgLSBJbml0aWFsIHJlbGVhc2UNCkxhc3QgR2VuZXJhdGVkOiAgICAgMTUgSnVsIDIwMjEgLSAxNTo0MjowNA0KQ29weXJpZ2h0IChDKSAyMDIxIE5leHRoaW5rIFNBLCBTd2l0emVybGFuZA0KIz4NCg0KIw0KIyBJbnB1dCBwYXJhbWV0ZXJzIGRlZmluaXRpb24NCiMNCnBhcmFtKA0KICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJHRydWUpXVtzdHJpbmddJERvd25sb2FkVXJsLA0KICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJHRydWUpXVtzdHJpbmddJENlcnRpZmljYXRlVGh1bWJwcmludA0KKQ0KIyBFbmQgb2YgcGFyYW1ldGVycyBkZWZpbml0aW9uDQoNCiMNCiMgQ29uc3RhbnRzIGRlZmluaXRpb24NCiMNCk5ldy1WYXJpYWJsZSAtTmFtZSAnRVJST1JfRVhDRVBUSU9OX1RZUEUnIGANCiAgICAtVmFsdWUgQHtFbnZpcm9ubWVudCA9ICdbRW52aXJvbm1lbnQgZXJyb3JdJw0KICAgICAgICAgICAgIElucHV0ID0gJ1tJbnB1dCBlcnJvcl0nDQogICAgICAgICAgICAgSW50ZXJuYWwgPSAnW0ludGVybmFsIGVycm9yXSd9IGANCiAgICAtT3B0aW9uIFJlYWRPbmx5IC1TY29wZSBTY3JpcHQNCk5ldy1WYXJpYWJsZSAtTmFtZSAnTE9DQUxfU1lTVEVNX0lERU5USVRZJyBgDQogICAgLVZhbHVlICdTLTEtNS0xOCcgLU9wdGlvbiBSZWFkT25seSAtU2NvcGUgU2NyaXB0DQpOZXctVmFyaWFibGUgLU5hbWUgJ1JFTU9URV9BQ1RJT05fRExMX1BBVEgnIGANCiAgICAtVmFsdWUgIiRlbnY6TkVYVEhJTktcUmVtb3RlQWN0aW9uc1xueHRyZW1vdGVhY3Rpb25zLmRsbCIgYA0KICAgIC1PcHRpb24gUmVhZE9ubHkgLVNjb3BlIFNjcmlwdA0KDQpOZXctVmFyaWFibGUgLU5hbWUgJ0NFUlRJRklDQVRFX1RFTVBPUkFMX0ZJTEVOQU1FJyBgDQogICAgLVZhbHVlICJOUkEuY2VyIiBgDQogICAgLU9wdGlvbiBDb25zdGFudCAtU2NvcGUgU2NyaXB0DQoNCk5ldy1WYXJpYWJsZSAtTmFtZSAnQUxMT1dFRF9ET01BSU5TJyBgDQogICAgLVZhbHVlIEB7J2N0cy5jb20nID0gJG51bGwNCiAgICAgICAgICAgICAnY3RzLm9ubWljcm9zb2Z0LmNvbScgPSAkbnVsbH0gYA0KICAgIC1PcHRpb24gUmVhZE9ubHkgLVNjb3BlIFNjcmlwdA0KTmV3LVZhcmlhYmxlIC1OYW1lICdTQ1JJUFRfRVhQSVJBVElPTl9EQVRFJyBgDQogICAgLVZhbHVlIChbZGF0ZXRpbWVdOjpQYXJzZUV4YWN0KCcwMS8wMi8yMDIyIDAwOjAwOjAwLjAwMFonLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGQvTU0veXl5eSBISDptbTpzcy5mZmZLJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2dsb2JhbGl6YXRpb24uY3VsdHVyZWluZm9dOjpJbnZhcmlhbnRDdWx0dXJlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ2xvYmFsaXphdGlvbi5kYXRldGltZXN0eWxlc106Ok5vbmUpKSBgDQogICAgLU9wdGlvbiBSZWFkT25seSAtU2NvcGUgU2NyaXB0IC1Gb3JjZQ0KDQpOZXctVmFyaWFibGUgLU5hbWUgJ0NFUlRJRklDQVRFX1NUT1JFX1RSVVNURURfUFVCTElTSEVSJyBgDQogICAgLVZhbHVlICdDZXJ0OlxMb2NhbE1hY2hpbmVcVHJ1c3RlZFB1Ymxpc2hlcicgYA0KICAgIC1PcHRpb24gQ29uc3RhbnQgLVNjb3BlIFNjcmlwdA0KTmV3LVZhcmlhYmxlIC1OYW1lICdDRVJUSUZJQ0FURV9TVE9SRV9ST09UJyBgDQogICAgLVZhbHVlICdDZXJ0OlxMb2NhbE1hY2hpbmVcUm9vdCcgYA0KICAgIC1PcHRpb24gQ29uc3RhbnQgLVNjb3BlIFNjcmlwdA0KIw0KIyBJbnZva2UgTWFpbg0KIw0KDQpmdW5jdGlvbiBJbnZva2UtTWFpbiAoW2hhc2h0YWJsZV0kSW5wdXRQYXJhbWV0ZXJzKSB7DQogICAgJGV4aXRDb2RlID0gMA0KICAgIHRyeSB7DQogICAgICAgIEFkZC1OZXh0aGlua1JlbW90ZUFjdGlvbkRMTA0KICAgICAgICBUZXN0LVJ1bm5pbmdBc0xvY2FsU3lzdGVtDQogICAgICAgIFRlc3QtRG9tYWluSXNBbGxvd2VkDQogICAgICAgIFRlc3QtU2NyaXB0RXhwaXJlZA0KICAgICAgICBUZXN0LVJ1bm5pbmdPbldpbmRvd3MxMA0KICAgICAgICBUZXN0LUlucHV0UGFyYW1ldGVycyAtSW5wdXRQYXJhbWV0ZXJzICRJbnB1dFBhcmFtZXRlcnMNCg0KICAgICAgICBTZXQtQ2VydGlmaWNhdGUgLUlucHV0UGFyYW1ldGVycyAkSW5wdXRQYXJhbWV0ZXJzDQogICAgfSBjYXRjaCB7DQogICAgICAgIFdyaXRlLVN0YXR1c01lc3NhZ2UgLU1lc3NhZ2UgJF8NCiAgICAgICAgJGV4aXRDb2RlID0gMQ0KICAgIH0NCg0KICAgIHJldHVybiAkZXhpdENvZGUNCn0NCg0KIw0KIyBUZW1wbGF0ZSBmdW5jdGlvbnMNCiMNCmZ1bmN0aW9uIEFkZC1OZXh0aGlua1JlbW90ZUFjdGlvbkRMTCB7DQoNCiAgICBpZiAoLW5vdCAoVGVzdC1QYXRoIC1QYXRoICRSRU1PVEVfQUNUSU9OX0RMTF9QQVRIKSkgew0KICAgICAgICB0aHJvdyAiJCgkRVJST1JfRVhDRVBUSU9OX1RZUEUuRW52aXJvbm1lbnQpIE5leHRoaW5rIFJlbW90ZSBBY3Rpb24gRExMIG5vdCBmb3VuZC4gIg0KICAgIH0NCiAgICBBZGQtVHlwZSAtUGF0aCAkUkVNT1RFX0FDVElPTl9ETExfUEFUSA0KfQ0KDQpmdW5jdGlvbiBUZXN0LVJ1bm5pbmdBc0xvY2FsU3lzdGVtIHsNCg0KICAgIGlmICgtbm90IChDb25maXJtLUN1cnJlbnRVc2VySXNMb2NhbFN5c3RlbSkpIHsNCiAgICAgICAgdGhyb3cgIiQoJEVSUk9SX0VYQ0VQVElPTl9UWVBFLkVudmlyb25tZW50KSBUaGlzIHNjcmlwdCBtdXN0IGJlIHJ1biBhcyBMb2NhbFN5c3RlbS4gIg0KICAgIH0NCn0NCg0KZnVuY3Rpb24gQ29uZmlybS1DdXJyZW50VXNlcklzTG9jYWxTeXN0ZW0gew0KDQogICAgJGN1cnJlbnRJZGVudGl0eSA9IEdldC1DdXJyZW50SWRlbnRpdHkNCiAgICByZXR1cm4gJGN1cnJlbnRJZGVudGl0eSAtZXEgJExPQ0FMX1NZU1RFTV9JREVOVElUWQ0KfQ0KDQpmdW5jdGlvbiBHZXQtQ3VycmVudElkZW50aXR5IHsNCg0KICAgIHJldHVybiBbc2VjdXJpdHkucHJpbmNpcGFsLndpbmRvd3NpZGVudGl0eV06OkdldEN1cnJlbnQoKS5Vc2VyLlRvU3RyaW5nKCkNCn0NCg0KZnVuY3Rpb24gVGVzdC1SdW5uaW5nT25XaW5kb3dzMTAgew0KDQogICAgJE9TVmVyc2lvbiA9IChHZXQtT1NWZXJzaW9uKSAtYXMgW3ZlcnNpb25dDQogICAgaWYgKC1ub3QgKCRPU1ZlcnNpb24pKSB7DQogICAgICAgIHRocm93ICIkKCRFUlJPUl9FWENFUFRJT05fVFlQRS5FbnZpcm9ubWVudCkgVGhpcyBzY3JpcHQgY291bGQgbm90IHJldHVybiBPUyB2ZXJzaW9uLiAiDQogICAgfQ0KICAgIGlmICgkT1NWZXJzaW9uLk1ham9yIC1uZSAxMCkgew0KICAgICAgICB0aHJvdyAiJCgkRVJST1JfRVhDRVBUSU9OX1RZUEUuRW52aXJvbm1lbnQpIFRoaXMgc2NyaXB0IGlzIGNvbXBhdGlibGUgd2l0aCBXaW5kb3dzIDEwIG9ubHkuICINCiAgICB9DQp9DQoNCmZ1bmN0aW9uIEdldC1PU1ZlcnNpb24gew0KDQogICAgcmV0dXJuIEdldC1XbWlPYmplY3QgLUNsYXNzIFdpbjMyX09wZXJhdGluZ1N5c3RlbSBgDQogICAgICAgICAgICAgICAgICAgICAgICAgLUZpbHRlciAnUHJvZHVjdFR5cGUgPSAxJyAtRXJyb3JBY3Rpb24gU3RvcCB8IGANCiAgICAgICAgICAgICAgIFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IFZlcnNpb24NCn0NCg0KZnVuY3Rpb24gV3JpdGUtU3RhdHVzTWVzc2FnZSAoW3Bzb2JqZWN0XSRNZXNzYWdlKSB7DQogICAgJGV4Y2VwdGlvbk1lc3NhZ2UgPSAkTWVzc2FnZS5Ub1N0cmluZygpDQoNCiAgICBpZiAoJE1lc3NhZ2UuSW52b2NhdGlvbkluZm8uU2NyaXB0TGluZU51bWJlcikgew0KICAgICAgICAkdmVyc2lvbiA9IEdldC1TY3JpcHRWZXJzaW9uDQogICAgICAgIGlmICgtbm90IFtzdHJpbmddOjpJc051bGxPckVtcHR5KCR2ZXJzaW9uKSkgew0KICAgICAgICAgICAgJHNjcmlwdFZlcnNpb24gPSAiVmVyc2lvbjogJHZlcnNpb24uICINCiAgICAgICAgfQ0KDQogICAgICAgICRlcnJvck1lc3NhZ2VMaW5lID0gJHNjcmlwdFZlcnNpb24gKyAiTGluZSAnJCgkTWVzc2FnZS5JbnZvY2F0aW9uSW5mby5TY3JpcHRMaW5lTnVtYmVyKSc6ICINCiAgICB9DQoNCiAgICAkaG9zdC51aS5Xcml0ZUVycm9yTGluZSgkZXJyb3JNZXNzYWdlTGluZSArICRleGNlcHRpb25NZXNzYWdlKQ0KfQ0KDQpmdW5jdGlvbiBHZXQtU2NyaXB0VmVyc2lvbiB7DQoNCiAgICAkc2NyaXB0Q29udGVudCA9IEdldC1Db250ZW50ICRNeUludm9jYXRpb24uU2NyaXB0TmFtZSB8IE91dC1TdHJpbmcNCiAgICBpZiAoJHNjcmlwdENvbnRlbnQgLW5vdG1hdGNoICc8I1tcclxuXXsyfS5TWU5PUFNJU1teXCNcPl0qKC5OT1RFU1teXCNcPl0qKVwjPicpIHsgcmV0dXJuIH0NCg0KICAgICRoZWxwQmxvY2sgPSAkTWF0Y2hlc1sxXS5TcGxpdChbZW52aXJvbm1lbnRdOjpOZXdMaW5lKQ0KDQogICAgZm9yZWFjaCAoJGxpbmUgaW4gJGhlbHBCbG9jaykgew0KICAgICAgICBpZiAoJGxpbmUgLW1hdGNoICdWZXJzaW9uOicpIHsNCiAgICAgICAgICAgIHJldHVybiAkbGluZS5TcGxpdCgnOicpWzFdLlNwbGl0KCctJylbMF0uVHJpbSgpDQogICAgICAgIH0NCiAgICB9DQp9DQoNCmZ1bmN0aW9uIFRlc3QtVVJMIChbc3RyaW5nXSRQYXJhbU5hbWUsIFtzdHJpbmddJFBhcmFtVmFsdWUpIHsNCiAgICBpZiAoQ29uZmlybS1TdHJpbmdJc05vdEVtcHR5IC1WYWx1ZSAkUGFyYW1WYWx1ZSkgew0KICAgICAgICAkdXJpID0gJFBhcmFtVmFsdWUgLWFzIFt1cmldDQogICAgICAgIGlmICgkbnVsbCAtbmUgJHVyaSAtYW5kICR1cmkuSXNXZWxsRm9ybWVkT3JpZ2luYWxTdHJpbmcoKSkgeyByZXR1cm4gfQ0KICAgIH0NCg0KICAgIHRocm93ICIkKCRFUlJPUl9FWENFUFRJT05fVFlQRS5JbnB1dCkgUGFyYW1ldGVyICckUGFyYW1OYW1lJyB3aXRoIHZhbHVlICckUGFyYW1WYWx1ZScgaXMgbm90IGEgY29ycmVjdCBVUkwgZm9ybWF0LiAiDQp9DQoNCmZ1bmN0aW9uIENvbmZpcm0tU3RyaW5nSXNOb3RFbXB0eSAoW3N0cmluZ10kVmFsdWUpIHsNCiAgICByZXR1cm4gLW5vdCBbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgoRm9ybWF0LVN0cmluZ1ZhbHVlIC1WYWx1ZSAkVmFsdWUpKQ0KfQ0KDQpmdW5jdGlvbiBGb3JtYXQtU3RyaW5nVmFsdWUgKFtzdHJpbmddJFZhbHVlKSB7DQogICAgcmV0dXJuICRWYWx1ZS5SZXBsYWNlKCciJywgJycpLlJlcGxhY2UoIiciLCAnJykuVHJpbSgpDQp9DQoNCmZ1bmN0aW9uIFRlc3QtVGh1bWJwcmludFBhcmFtZXRlciAoW3N0cmluZ10kUGFyYW1OYW1lLCBbc3RyaW5nXSRQYXJhbVZhbHVlKSB7DQogICAgaWYgKCRQYXJhbVZhbHVlIC1ub3RtYXRjaCAiXltcZHxcd117NDB9JCIpIHsNCiAgICAgICAgdGhyb3cgIiQoJEVSUk9SX0VYQ0VQVElPTl9UWVBFLklucHV0KSBFcnJvciBpbiBwYXJhbWV0ZXIgJyRQYXJhbU5hbWUnLiBUaGUgJFBhcmFtTmFtZSBtdXN0IGJlIGNvbXBvc2VkIG9mIGZvcnR5IGFscGhhbnVtZXJpYyB2YWx1ZXMuICINCiAgICB9DQp9DQoNCmZ1bmN0aW9uIEdldC1UZW1wb3JhcnlGb2xkZXJQYXRoIHsNCg0KICAgICRyYW5kb21WYWx1ZSA9IEdldC1SYW5kb21BbHBoYU51bWVyaWNTdHJpbmcNCiAgICBpZiAoQ29uZmlybS1DdXJyZW50VXNlcklzTG9jYWxTeXN0ZW0pIHsNCiAgICAgICAgcmV0dXJuIChKb2luLVBhdGggLVBhdGggIiRlbnY6U1lTVEVNUk9PVFxOZXh0aGluayIgLUNoaWxkUGF0aCAkcmFuZG9tVmFsdWUpDQogICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIChKb2luLVBhdGggLVBhdGggJGVudjpURU1QIC1DaGlsZFBhdGggJHJhbmRvbVZhbHVlKQ0KICAgIH0NCn0NCg0KZnVuY3Rpb24gR2V0LVJhbmRvbUFscGhhTnVtZXJpY1N0cmluZyB7DQoNCiAgICByZXR1cm4gW2d1aWRdOjpOZXdHdWlkKCkudG9TdHJpbmcoJ04nKQ0KfQ0KDQpmdW5jdGlvbiBOZXctSW5zdGFsbGVyRm9sZGVyIChbc3RyaW5nXSRQYXRoKSB7DQogICAgUmVtb3ZlLUZpbGUgLVBhdGggJFBhdGgNCiAgICBbdm9pZF0oTmV3LUl0ZW0gLVBhdGggJFBhdGggLUl0ZW1UeXBlICdEaXJlY3RvcnknKQ0KfQ0KDQpmdW5jdGlvbiBSZW1vdmUtRmlsZSAoW3N0cmluZ10kUGF0aCkgew0KICAgIGlmIChbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkUGF0aCkgLW9yIGANCiAgICAgICAgKC1ub3QgKFRlc3QtUGF0aCAtUGF0aCAkUGF0aCkpKSB7IHJldHVybiB9DQoNCiAgICBSZW1vdmUtSXRlbSAtUGF0aCAkUGF0aCAtUmVjdXJzZSAtRm9yY2UgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUNCn0NCg0KIw0KIyBJbnB1dCBwYXJhbWV0ZXIgdmFsaWRhdGlvbg0KIw0KZnVuY3Rpb24gVGVzdC1JbnB1dFBhcmFtZXRlcnMgKFtoYXNodGFibGVdJElucHV0UGFyYW1ldGVycykgew0KICAgIFRlc3QtVVJMIGANCiAgICAgICAgLVBhcmFtTmFtZSAnRG93bmxvYWRVcmwnIGANCiAgICAgICAgLVBhcmFtVmFsdWUgJElucHV0UGFyYW1ldGVycy5Eb3dubG9hZFVybA0KICAgIFRlc3QtVGh1bWJwcmludFBhcmFtZXRlciBgDQogICAgICAgIC1QYXJhbU5hbWUgJ0NlcnRpZmljYXRlVGh1bWJwcmludCcgYA0KICAgICAgICAtUGFyYW1WYWx1ZSAkSW5wdXRQYXJhbWV0ZXJzLkNlcnRpZmljYXRlVGh1bWJwcmludA0KfQ0KDQojDQojIENvZ25pemFudCBmdW5jdGlvbnMNCiMNCmZ1bmN0aW9uIFRlc3QtRG9tYWluSXNBbGxvd2VkIHsNCiAgICAkY29tcHV0ZXJJbmZvID0gR2V0LVdtaU9iamVjdCAtQ2xhc3MgV2luMzJfY29tcHV0ZXJTeXN0ZW0gLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUNCiAgICBpZiAoJG51bGwgLWVxICRjb21wdXRlckluZm8pIHsNCiAgICAgICAgdGhyb3cgIiQoJEVSUk9SX0VYQ0VQVElPTl9UWVBFLkVudmlyb25tZW50KSBUaGUgY2xhc3MgV2luMzJfY29tcHV0ZXJTeXN0ZW0gaXMgbm90IHByZXNlbnQgb24gdGhlIHN5c3RlbS4gIg0KICAgIH0NCiAgICAkY3VycmVudERvbWFpbiA9ICRjb21wdXRlckluZm8uRG9tYWluDQogICAgaWYgKFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRjdXJyZW50RG9tYWluKSkgew0KICAgICAgICB0aHJvdyAiJCgkRVJST1JfRVhDRVBUSU9OX1RZUEUuRW52aXJvbm1lbnQpIENvdWxkIG5vdCByZXR1cm4gYSB2YWxpZCBEb21haW4gbmFtZS4gIg0KICAgIH0NCiAgICBpZiAoLW5vdCAoJEFMTE9XRURfRE9NQUlOUy5Db250YWlucygkY3VycmVudERvbWFpbikpKSB7DQogICAgICAgIHRocm93ICIkKCRFUlJPUl9FWENFUFRJT05fVFlQRS5FbnZpcm9ubWVudCkgVGhlIGV4ZWN1dGlvbiBvZiB0aGlzIHNjcmlwdCBpcyBub3QgcGVybWl0dGVkIG9uIHRoaXMgZGV2aWNlLiAiDQogICAgfQ0KfQ0KDQpmdW5jdGlvbiBUZXN0LVNjcmlwdEV4cGlyZWQgew0KICAgICRjdXJyZW50RGF0ZSA9IEdldC1EYXRlDQogICAgaWYgKCRjdXJyZW50RGF0ZSAtZ2UgJFNDUklQVF9FWFBJUkFUSU9OX0RBVEUpIHsNCiAgICAgICAgdGhyb3cgIiQoJEVSUk9SX0VYQ0VQVElPTl9UWVBFLkVudmlyb25tZW50KSBUaGlzIHNjcmlwdCBjYW5ub3QgYmUgdXNlZCBiZWNhdXNlIGl0IGV4cGlyZWQgb24gJFNDUklQVF9FWFBJUkFUSU9OX0RBVEUuICINCiAgICB9DQp9DQoNCmZ1bmN0aW9uIFNldC1DZXJ0aWZpY2F0ZSAoW2hhc2h0YWJsZV0kSW5wdXRQYXJhbWV0ZXJzKSB7DQogICAgJGZpbmFsUGF0aCA9IEdldC1OZXdDZXJ0aWZpY2F0ZVBhdGggLURvd25sb2FkVXJsICRJbnB1dFBhcmFtZXRlcnMuRG93bmxvYWRVcmwNCiAgICANCiAgICBTZXQtQ2VydGlmaWNhdGVJblN0b3JlIC1UaHVtYnByaW50ICRJbnB1dFBhcmFtZXRlcnMuQ2VydGlmaWNhdGVUaHVtYnByaW50IGANCiAgICAgICAgICAgICAgICAgICAgICAgICAgIC1DZXJ0aWZpY2F0ZVN0b3JlICRDRVJUSUZJQ0FURV9TVE9SRV9UUlVTVEVEX1BVQkxJU0hFUiBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAtTmV3Q2VydGlmaWNhdGVMb2NhdGlvbiAkZmluYWxQYXRoDQogICAgU2V0LUNlcnRpZmljYXRlSW5TdG9yZSAtVGh1bWJwcmludCAkSW5wdXRQYXJhbWV0ZXJzLkNlcnRpZmljYXRlVGh1bWJwcmludCBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAtQ2VydGlmaWNhdGVTdG9yZSAkQ0VSVElGSUNBVEVfU1RPUkVfUk9PVCBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAtTmV3Q2VydGlmaWNhdGVMb2NhdGlvbiAkZmluYWxQYXRoDQp9DQoNCmZ1bmN0aW9uIEdldC1OZXdDZXJ0aWZpY2F0ZVBhdGggKFtzdHJpbmddJERvd25sb2FkVXJsKSB7DQogICAgJHJhbmRvbUZvbGRlciA9IEdldC1UZW1wb3JhcnlGb2xkZXJQYXRoDQogICAgTmV3LUluc3RhbGxlckZvbGRlciAtUGF0aCAkcmFuZG9tRm9sZGVyDQogICAgJGZpbmFsUGF0aCA9IEpvaW4tUGF0aCAtUGF0aCAkcmFuZG9tRm9sZGVyIC1DaGlsZFBhdGggJENFUlRJRklDQVRFX1RFTVBPUkFMX0ZJTEVOQU1FDQogICAgR2V0LUlucHV0Q2VydGlmaWNhdGUgLURvd25sb2FkVXJsICREb3dubG9hZFVybCAtRG93bmxvYWRQYXRoICRmaW5hbFBhdGgNCg0KICAgIHJldHVybiAkZmluYWxQYXRoDQp9DQoNCmZ1bmN0aW9uIEdldC1JbnB1dENlcnRpZmljYXRlKFtzdHJpbmddJERvd25sb2FkVXJsLCBbc3RyaW5nXSREb3dubG9hZFBhdGgpIHsNCiAgICB0cnkgew0KICAgICAgICAkd2ViQ2xpZW50ID0gTmV3LU9iamVjdCAtVHlwZU5hbWUgJ25ldC53ZWJjbGllbnQnDQogICAgICAgICRXZWJDbGllbnQuRG93bmxvYWRGaWxlKCREb3dubG9hZFVybCwgJERvd25sb2FkUGF0aCkNCiAgICB9IGNhdGNoIHsNCiAgICAgICAgdGhyb3cgIiQoJEVSUk9SX0VYQ0VQVElPTl9UWVBFLkVudmlyb25tZW50KSBDZXJ0aWZpY2F0ZSBkb3dubG9hZCBmYWlsZWQgZnJvbSAkKCREb3dubG9hZFVybCkgd2l0aCBlcnJvcjogJCgkXy5FeGNlcHRpb24uTWVzc2FnZSkuICINCiAgICB9DQp9DQoNCmZ1bmN0aW9uIFNldC1DZXJ0aWZpY2F0ZUluU3RvcmUgKFtzdHJpbmddJFRodW1icHJpbnQsIFtzdHJpbmddJENlcnRpZmljYXRlU3RvcmUsIFtzdHJpbmddJE5ld0NlcnRpZmljYXRlTG9jYXRpb24pIHsNCiAgICBpZiAoVGVzdC1DZXJ0aWZpY2F0ZUV4aXN0cyAtUGF0aCAkQ2VydGlmaWNhdGVTdG9yZSAtVGh1bWJwcmludCAkVGh1bWJwcmludCkgew0KICAgICAgICBpZiAoVGVzdC1DZXJ0aWZpY2F0ZUlzRXhwaXJlZCAtUGF0aCAkQ2VydGlmaWNhdGVTdG9yZSAtVGh1bWJwcmludCAkVGh1bWJwcmludCkgew0KICAgICAgICAgICAgSW5zdGFsbC1DZXJ0aWZpY2F0ZSAtUGF0aCAkTmV3Q2VydGlmaWNhdGVMb2NhdGlvbiAtTG9jYXRpb24gJENlcnRpZmljYXRlU3RvcmUNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIFdyaXRlLVN0YXR1c01lc3NhZ2UgLU1lc3NhZ2UgIlRoZSBjZXJ0aWZpY2F0ZSBpcyBpbnN0YWxsZWQgYW5kIHZhbGlkIGluICRDZXJ0aWZpY2F0ZVN0b3JlLiAiDQogICAgICAgIH0NCiAgICAgICAgDQogICAgfSBlbHNlIHsNCiAgICAgICAgSW5zdGFsbC1DZXJ0aWZpY2F0ZSAtUGF0aCAkTmV3Q2VydGlmaWNhdGVMb2NhdGlvbiAtTG9jYXRpb24gJENlcnRpZmljYXRlU3RvcmUNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIFRlc3QtQ2VydGlmaWNhdGVFeGlzdHMgKFtzdHJpbmddJFBhdGgsIFtzdHJpbmddJFRodW1icHJpbnQpIHsNCiAgICByZXR1cm4gJG51bGwgLW5lIChHZXQtQ2hpbGRJdGVtIC1QYXRoICRQYXRoIHwgd2hlcmUtb2JqZWN0IHsgJF8uVGh1bWJwcmludCAtbWF0Y2ggJFRodW1icHJpbnQgfSApDQp9DQoNCmZ1bmN0aW9uIFRlc3QtQ2VydGlmaWNhdGVJc0V4cGlyZWQgKFtzdHJpbmddJFBhdGgsIFtzdHJpbmddJFRodW1icHJpbnQpIHsNCiAgICByZXR1cm4gJG51bGwgLW5lIChHZXQtQ2hpbGRJdGVtIC1QYXRoICRQYXRoIHwgd2hlcmUtb2JqZWN0IHsgJF8uVGh1bWJwcmludCAtbWF0Y2ggJFRodW1icHJpbnQgLWFuZCAkXy5Ob3RBZnRlciAtbHQgKEdldC1EYXRlKX0pDQp9DQoNCmZ1bmN0aW9uIEluc3RhbGwtQ2VydGlmaWNhdGUgKFtzdHJpbmddJFBhdGgsIFtzdHJpbmddJExvY2F0aW9uKSB7DQogICAgdHJ5IHsNCiAgICAgICAgW3ZvaWRdKEltcG9ydC1DZXJ0aWZpY2F0ZSAtRmlsZVBhdGggJFBhdGggLUNlcnRTdG9yZUxvY2F0aW9uICRMb2NhdGlvbiAtQ29uZmlybTokZmFsc2UpDQogICAgICAgIFdyaXRlLVN0YXR1c01lc3NhZ2UgLU1lc3NhZ2UgICJDZXJ0aWZpY2F0ZSBJbXBvcnQgdG8gJExvY2F0aW9uIFN1Y2Nlc3NmdWwuICINCiAgICB9IGNhdGNoIHsNCiAgICAgICAgdGhyb3cgIiQoJEVSUk9SX0VYQ0VQVElPTl9UWVBFLkVudmlyb25tZW50KSBDZXJ0IEltcG9ydCB0byAkTG9jYXRpb24gZmFpbGVkIHdpdGggZXJyb3I6ICQoJF8uRXhjZXB0aW9uLk1lc3NhZ2UpLiAiDQogICAgfQ0KfQ0KDQojDQojIE1haW4gc2NyaXB0IGZsb3cNCiMNCg0KW2Vudmlyb25tZW50XTo6RXhpdCgoSW52b2tlLU1haW4gLUlucHV0UGFyYW1ldGVycyAkTXlJbnZvY2F0aW9uLkJvdW5kUGFyYW1ldGVycykpDQoNCiMgU0lHICMgQmVnaW4gc2lnbmF0dXJlIGJsb2NrDQojIE1JSWltZ1lKS29aSWh2Y05BUWNDb0lJaWl6Q0NJb2NDQVFFeER6QU5CZ2xnaGtnQlpRTUVBZ0VGQURCNUJnb3INCiMgQmdFRUFZSTNBZ0VFb0dzd2FUQTBCZ29yQmdFRUFZSTNBZ0VlTUNZQ0F3RUFBQVFRSDh3N1lGbExDRTYzSk5MRw0KIyBLWDd6VVFJQkFBSUJBQUlCQUFJQkFBSUJBREF4TUEwR0NXQ0dTQUZsQXdRQ0FRVUFCQ0Q0djNVWHY4L1VKTVZWDQojIHk5dTQyaEYxZE50RmZmVmRCZDJ2SnlMajJUNitLS0NDRVRzd2dnUEZNSUlDcmFBREFnRUNBaEFDckZ3bWFndEENCiMgbTQ4TGVmS3VSaVYzTUEwR0NTcUdTSWIzRFFFQkJRVUFNR3d4Q3pBSkJnTlZCQVlUQWxWVE1SVXdFd1lEVlFRSw0KIyBFd3hFYVdkcFEyVnlkQ0JKYm1NeEdUQVhCZ05WQkFzVEVIZDNkeTVrYVdkcFkyVnlkQzVqYjIweEt6QXBCZ05WDQojIEJBTVRJa1JwWjJsRFpYSjBJRWhwWjJnZ1FYTnpkWEpoYm1ObElFVldJRkp2YjNRZ1EwRXdIaGNOTURZeE1URXcNCiMgTURBd01EQXdXaGNOTXpFeE1URXdNREF3TURBd1dqQnNNUXN3Q1FZRFZRUUdFd0pWVXpFVk1CTUdBMVVFQ2hNTQ0KIyBSR2xuYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCM2QzY3VaR2xuYVdObGNuUXVZMjl0TVNzd0tRWURWUVFEDQojIEV5SkVhV2RwUTJWeWRDQklhV2RvSUVGemMzVnlZVzVqWlNCRlZpQlNiMjkwSUVOQk1JSUJJakFOQmdrcWhraUcNCiMgOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhzemxjK2I3MUx2bExTMHlwdC9sZ1QvSnpTVkp0bkVxdzlXVQ0KIyBOR2VpQ2h5d1gybW1RTEhFdDdLUDBKaWtxVUZaT3RQY2xOWTgyM1E0cEVyTVRTV0M5MHFsVXhJNDd2TkpiWEdSDQojIGZtTzJxNlpmdzZTRStFOWlVYjc0eGV6Yk9KTGpCdVVJa1F6RUtFRlYrOHRhaVJWK2NlZzF2MDF5Q1QyK09qaFENCiMgVzNjeEc0Mnp4eVJGbXFlc2JRQVVXZ1MzdWhQclVRcVlRVUVpVG1WaGg0RkJVS1o1WEluZUdVcFgxUzdtWFJ4VA0KIyBMSDZZelJvR0ZxUm9jOUEwQkJOY29YSFRXbnhWMjE1azRUZUhNRllFNVJHMEtZQVM4WGs1aUtJQ0VYd25acmVJDQojIHQzanl5Z3FvT0tzS1pNSy9abDJWaE1HaEpSNkhYUnBRQ3lBU3pFRzdiZ3RST0xoTHl3SURBUUFCbzJNd1lUQU8NCiMgQmdOVkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVzVDdEYVFQNA0KIyB2MGNCMUpnbUdnZ0M3Mk5rSzhNd0h3WURWUjBqQkJnd0ZvQVVzVDdEYVFQNHYwY0IxSmdtR2dnQzcyTmtLOE13DQojIERRWUpLb1pJaHZjTkFRRUZCUUFEZ2dFQkFCd2FCcGZjMTV5ZlBJaG1CZ2hYSWRzaFIvZ3FaNnEvR0RKMlFCQlgNCiMgd1lyemV0a1JaWTQxK3A3OFJiV2UyVXd4UzdpUjZFTXNqck40enR2alUzbHgxdVVobEFIYVZZZWFKR1QyaW1iTQ0KIyAzcHczemFnMHNXbWJJOGllZUNJcmNFUGpWVWN4WVJudldNV0ZMMDR3OXFBeEZpUEk1K0psRmpQTHZ4b2JvRDM0DQojIHlsNkxNWXRnQ0lrdERBWmNVcmZFK1FxWTBSVmZueEsrZkRaak9MMUVwSC9rSmlzS3hKZHBEZW1NNHNBUVY3akkNCiMgZGhLUlZmSklhZGk4S2dKYkQwVFVJREhiOUxwd0psMlFZSjY4U3hjSkw3VExIa05veVFjbndkSmM5K29odVdnUw0KIyBuRHljdjU3OGdGeWJZODNzUjZvbEoyZWdOL01BZ24xVTE2bjQ2UzRUbzNmb0gwb3dnZ2F1TUlJRmxxQURBZ0VDDQojIEFoQUtHZzBiY28rVXVMZHdGQ0I4S2dyRU1BMEdDU3FHU0liM0RRRUJDd1VBTUd3eEN6QUpCZ05WQkFZVEFsVlQNCiMgTVJVd0V3WURWUVFLRXd4RWFXZHBRMlZ5ZENCSmJtTXhHVEFYQmdOVkJBc1RFSGQzZHk1a2FXZHBZMlZ5ZEM1ag0KIyBiMjB4S3pBcEJnTlZCQU1USWtScFoybERaWEowSUVWV0lFTnZaR1VnVTJsbmJtbHVaeUJEUVNBb1UwaEJNaWt3DQojIEhoY05NakF3T0RFM01EQXdNREF3V2hjTk1qTXdPREl5TVRJd01EQXdXakNCd0RFVE1CRUdDeXNHQVFRQmdqYzgNCiMgQWdFREV3SkRTREVWTUJNR0N5c0dBUVFCZ2pjOEFnRUNFd1JXWVhWa01SMHdHd1lEVlFRUERCUlFjbWwyWVhSbA0KIyBJRTl5WjJGdWFYcGhkR2x2YmpFWU1CWUdBMVVFQlJNUFEwaEZMVEV4TWk0d01EQXVOVGM1TVFzd0NRWURWUVFHDQojIEV3SkRTREVQTUEwR0ExVUVCeE1HVUhKcGJHeDVNUll3RkFZRFZRUUtFdzFPUlZoVWFHbHVheUJUTGtFdU1Rc3cNCiMgQ1FZRFZRUUxFd0pTUkRFV01CUUdBMVVFQXhNTlRrVllWR2hwYm1zZ1V5NUJMakNDQWlJd0RRWUpLb1pJaHZjTg0KIyBBUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTE1icjhrNUI0VVQ3RTkrNlNrb2EzSWh5OHY2dlNIV2E1VGZwdFBuDQojIEIxSlE3QmdzdzZFRENJL0hySWxjUlJGK2ZlWEdZUFlha0o1bmcxY2tNMjJ1L0Z0QW1ybGhiNVZMRk9lTWl1Yi8NCiMgUjVjUFE2SWhqZENuVGlWUHJCYllldkNteUhPVGRxYzc0R0Z5Z0JLK2cvWkxacU9XSkRraHdWaW1UTlRQMVJPLw0KIyBCZWMzSkkzcnIwQ3VJcXFHdkN0L1R1Y1BzelZ5dUtSVml3NWd2TWthd1F2ZndUOE1tTGZGa3I5OGx0NEJsVFpHDQojIFNrb1B1bUVTK2JKZFdNVHRkVGZaSWsrS1F2NjBvV21zV2xJL0x4ZSttMXFJbkNFRExGblNzUUlOK0hHa2FiVzUNCiMgVWlFSjZiRGpaQ0lCNVBoUVhqdjBXWExUR1pxVGNiQmVCTElBbjA2TDlUSUg2b0NHODdRbHJYZHlzT0RjYXFpUQ0KIyBTa0FKN2JYUXNjZldzUkhXUHJSelUzNkEybU94REtFUkd4SDNpUER4ZlY5TkFFYjhoZEZUZnhKUk1hK2hFQXF0DQojIDZxeDRQdVVaYnU3bThUcmgrZkhLbzVTOWJ3WGtZbWkwVERPTnBZRVFtYjcrbGVmY0hxTE5hSWdwZmRLNWgvMFYNCiMgbFVscER3bE5HWE1mRTJhQmhOUjZMNU85OXIxMVkycUpBMU9tTUJjUE5vWTdsalhtZE1IdTFWOS9ERTBKSzRPWQ0KIyBWeGJuVVZNcVRmMy9WZ1p4R2VjWU1NZmFtanY0MnNQRnZNZGFDajhDM040YzBkNHNXT2x0SmtqQ21pNWZLdzl5DQojIFVHTHpVeldPZng5eTBhVFFuOVNkL3k2OGNCUC9KbC8xa3dzM3hQNE9yc3psNXZBRmVuVFF3dE9ITGdzb2swRUYNCiMgRnVhTEFnTUJBQUdqZ2dIMU1JSUI4VEFmQmdOVkhTTUVHREFXZ0JTUDZIN3diVEpxQUFVangzQ1hhanFRLzJ2cQ0KIyAxREFkQmdOVkhRNEVGZ1FVVWx1b3pQQ0lvWUJ5dUQ0ZFZCY0NsYnc0NjM4d01nWURWUjBSQkNzd0thQW5CZ2dyDQojIEJnRUZCUWNJQTZBYk1Ca01GME5JTFZaQlZVUXRRMGhGTFRFeE1pNHdNREF1TlRjNU1BNEdBMVVkRHdFQi93UUUNCiMgQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBekI3QmdOVkhSOEVkREJ5TURlZ05hQXpoakZvZEhSdw0KIyBPaTh2WTNKc015NWthV2RwWTJWeWRDNWpiMjB2UlZaRGIyUmxVMmxuYm1sdVoxTklRVEl0WnpFdVkzSnNNRGVnDQojIE5hQXpoakZvZEhSd09pOHZZM0pzTkM1a2FXZHBZMlZ5ZEM1amIyMHZSVlpEYjJSbFUybG5ibWx1WjFOSVFUSXQNCiMgWnpFdVkzSnNNRXNHQTFVZElBUkVNRUl3TndZSllJWklBWWI5YkFNQ01Db3dLQVlJS3dZQkJRVUhBZ0VXSEdoMA0KIyBkSEJ6T2k4dmQzZDNMbVJwWjJsalpYSjBMbU52YlM5RFVGTXdCd1lGWjRFTUFRTXdmZ1lJS3dZQkJRVUhBUUVFDQojIGNqQndNQ1FHQ0NzR0FRVUZCekFCaGhob2RIUndPaTh2YjJOemNDNWthV2RwWTJWeWRDNWpiMjB3U0FZSUt3WUINCiMgQlFVSE1BS0dQR2gwZEhBNkx5OWpZV05sY25SekxtUnBaMmxqWlhKMExtTnZiUzlFYVdkcFEyVnlkRVZXUTI5aw0KIyBaVk5wWjI1cGJtZERRUzFUU0VFeUxtTnlkREFNQmdOVkhSTUJBZjhFQWpBQU1BMEdDU3FHU0liM0RRRUJDd1VBDQojIEE0SUJBUUFZNklCNFBuTmN6aGRlbVZWaWR0VDhYVDBQKy9FajliYmFNSW1SNkhFTFRjWVgxOWdqa3NGTlVyUjYNCiMgL1hVUGdhai9uU3BscjVPajNESjVKQ1BvMkFWS3dZMW1VV1MydVlvWlJpbkVBb2REZkVTcWZUaVIxOTgyeHA3Mg0KIyBnbzM0N0dUTW5wcGsyRXBkdUlpb2krZGN3YmJ3MURmMm5GekkzRmNYN0gxVUlQZDhNNHAzVUF0NVdDaVZNUEhXDQojIFh4clF0NW44anhnTGN1c3ZPUlhacVpPc2RUbDdIWnBzVkhuR1VZNzg3T3UwSUp4dUZzaVVNNjRiS0d6dk5xcXQNCiMgWXlGeVI5OUVyQ1RxZFo2NnVyYUZpbEFnalB3YUxGekpVdzYrYUsvd1d4S0I3UTBwaUlDcGVYMVgwSUxadTU2Rw0KIyBSMjA2VkVjbXhXSUxZalFFMk5aY1QrN3ZiVXptTUlJR3ZEQ0NCYVNnQXdJQkFnSVFBL0cwNFY4Nmd2RVVsbml6DQojIDE5aEhYREFOQmdrcWhraUc5dzBCQVFzRkFEQnNNUXN3Q1FZRFZRUUdFd0pWVXpFVk1CTUdBMVVFQ2hNTVJHbG4NCiMgYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCM2QzY3VaR2xuYVdObGNuUXVZMjl0TVNzd0tRWURWUVFERXlKRQ0KIyBhV2RwUTJWeWRDQklhV2RvSUVGemMzVnlZVzVqWlNCRlZpQlNiMjkwSUVOQk1CNFhEVEV5TURReE9ERXlNREF3DQojIE1Gb1hEVEkzTURReE9ERXlNREF3TUZvd2JERUxNQWtHQTFVRUJoTUNWVk14RlRBVEJnTlZCQW9UREVScFoybEQNCiMgWlhKMElFbHVZekVaTUJjR0ExVUVDeE1RZDNkM0xtUnBaMmxqWlhKMExtTnZiVEVyTUNrR0ExVUVBeE1pUkdsbg0KIyBhVU5sY25RZ1JWWWdRMjlrWlNCVGFXZHVhVzVuSUVOQklDaFRTRUV5S1RDQ0FTSXdEUVlKS29aSWh2Y05BUUVCDQojIEJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtkVCtnK3l0UlB4Wk0rRWdQeXVnRFhSdHRmSG95eXNHaXlzOFlTc09qVVMNCiMgT3BLUnVsZmt4TW56TDZoSVBMZldidHlYSXJwUmVXR3ZReThOdDV1MFNUR3VSRmcrcEtHV3A0ZFBJMzdEYkdVaw0KIyBrRlUrb2NvamZNVkM2Y1I2WWtXYmZkNWpkTXVlWXlYNGhKcWFyVVZQcm4wZnlCUExkWnZKNGVHSytBc01tUFRLDQojIFB0QkZxbm9lcFZpVE5qUytLeTRyTVZobXRESVFuNTN3VXFIdjZEN1RkdkpBV3R6NmFqMGJTNjEyc0l4YzdqYTYNCiMgZytvd3FFemU4UXNxV0VHSXJnQ0pxd1BSRm9JZ0luYnJYbFE0RW1MaDBuQWsyKzBmY05Ka0NZQXQ0cmFkemgveQ0KIyB1eUh6Yk52WXN4bDdpbENmNyt3MkNseWF0MHJUQ0tBNWVmM2R2ejA2Q1NVQ0F3RUFBYU9DQTFnd2dnTlVNQklHDQojIEExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0RnWURWUjBQQVFIL0JBUURBZ0dHTUJNR0ExVWRKUVFNTUFvR0NDc0cNCiMgQVFVRkJ3TURNSDhHQ0NzR0FRVUZCd0VCQkhNd2NUQWtCZ2dyQmdFRkJRY3dBWVlZYUhSMGNEb3ZMMjlqYzNBdQ0KIyBaR2xuYVdObGNuUXVZMjl0TUVrR0NDc0dBUVVGQnpBQ2hqMW9kSFJ3T2k4dlkyRmpaWEowY3k1a2FXZHBZMlZ5DQojIGRDNWpiMjB2UkdsbmFVTmxjblJJYVdkb1FYTnpkWEpoYm1ObFJWWlNiMjkwUTBFdVkzSjBNSUdQQmdOVkhSOEUNCiMgZ1ljd2dZUXdRS0Erb0R5R09taDBkSEE2THk5amNtd3pMbVJwWjJsalpYSjBMbU52YlM5RWFXZHBRMlZ5ZEVocA0KIyBaMmhCYzNOMWNtRnVZMlZGVmxKdmIzUkRRUzVqY213d1FLQStvRHlHT21oMGRIQTZMeTlqY213MExtUnBaMmxqDQojIFpYSjBMbU52YlM5RWFXZHBRMlZ5ZEVocFoyaEJjM04xY21GdVkyVkZWbEp2YjNSRFFTNWpjbXd3Z2dIRUJnTlYNCiMgSFNBRWdnRzdNSUlCdHpDQ0FiTUdDV0NHU0FHRy9Xd0RBakNDQWFRd09nWUlLd1lCQlFVSEFnRVdMbWgwZEhBNg0KIyBMeTkzZDNjdVpHbG5hV05sY25RdVkyOXRMM056YkMxamNITXRjbVZ3YjNOcGRHOXllUzVvZEcwd2dnRmtCZ2dyDQojIEJnRUZCUWNDQWpDQ0FWWWVnZ0ZTQUVFQWJnQjVBQ0FBZFFCekFHVUFJQUJ2QUdZQUlBQjBBR2dBYVFCekFDQUENCiMgUXdCbEFISUFkQUJwQUdZQWFRQmpBR0VBZEFCbEFDQUFZd0J2QUc0QWN3QjBBR2tBZEFCMUFIUUFaUUJ6QUNBQQ0KIyBZUUJqQUdNQVpRQndBSFFBWVFCdUFHTUFaUUFnQUc4QVpnQWdBSFFBYUFCbEFDQUFSQUJwQUdjQWFRQkRBR1VBDQojIGNnQjBBQ0FBUXdCUUFDOEFRd0JRQUZNQUlBQmhBRzRBWkFBZ0FIUUFhQUJsQUNBQVVnQmxBR3dBZVFCcEFHNEENCiMgWndBZ0FGQUFZUUJ5QUhRQWVRQWdBRUVBWndCeUFHVUFaUUJ0QUdVQWJnQjBBQ0FBZHdCb0FHa0FZd0JvQUNBQQ0KIyBiQUJwQUcwQWFRQjBBQ0FBYkFCcEFHRUFZZ0JwQUd3QWFRQjBBSGtBSUFCaEFHNEFaQUFnQUdFQWNnQmxBQ0FBDQojIGFRQnVBR01BYndCeUFIQUFid0J5QUdFQWRBQmxBR1FBSUFCb0FHVUFjZ0JsQUdrQWJnQWdBR0lBZVFBZ0FISUENCiMgWlFCbUFHVUFjZ0JsQUc0QVl3QmxBQzR3SFFZRFZSME9CQllFRkkvb2Z2QnRNbW9BQlNQSGNKZHFPcEQvYStyVQ0KIyBNQjhHQTFVZEl3UVlNQmFBRkxFK3cya0QrTDlIQWRTWUpob0lBdTlqWkN2RE1BMEdDU3FHU0liM0RRRUJDd1VBDQojIEE0SUJBUUFaTTBvTWdUTTMyNjAyeWVUSk9ydTFHeTU2b3VMMFEwSVhucjlPb1UzaHNkdnBnZDJmQWZMa2lOWHANCiMgL2duOUljSHNYWURTOE5iQlE4TCtkeXZiK2RlUk04NXMxYklaTytZdTFzbVRUNGhBanMzaDlYN3hEOFpaVm5Mbw0KIyA2MnBCdlJ6VlJ0VjhTY3BtT0JYQnYrQ1JjSGVIM01tTk1ja01LYUl6N1kzaWg4MkpqVDhiLzlYZ0dwZUxmTnB0DQojICs2akdzanBtYTNzQnM4M1lwalRzRWdHcmxWaWx4Rk5YcUdEbTV3SVNvTGtqWktKTnUzeUJKV1FodnMvdVFoaEQNCiMgbDd1bE53YXZUZjhtcFUxaFMreEdRYmhsenJoNW5naVdDNEdNaWp1UHg1bU1veXB1bUcxZVljYVd0NHE1WVMyVA0KIyB1T3NPQkVQWDlmNm04R0xVbVdxbHdjSHdaSlNBTVlJUXRUQ0NFTEVDQVFFd2dZQXdiREVMTUFrR0ExVUVCaE1DDQojIFZWTXhGVEFUQmdOVkJBb1RERVJwWjJsRFpYSjBJRWx1WXpFWk1CY0dBMVVFQ3hNUWQzZDNMbVJwWjJsalpYSjANCiMgTG1OdmJURXJNQ2tHQTFVRUF4TWlSR2xuYVVObGNuUWdSVllnUTI5a1pTQlRhV2R1YVc1bklFTkJJQ2hUU0VFeQ0KIyBLUUlRQ2hvTkczS1BsTGkzY0JRZ2ZDb0t4REFOQmdsZ2hrZ0JaUU1FQWdFRkFLQ0JoREFZQmdvckJnRUVBWUkzDQojIEFnRU1NUW93Q0tBQ2dBQ2hBb0FBTUJrR0NTcUdTSWIzRFFFSkF6RU1CZ29yQmdFRUFZSTNBZ0VFTUJ3R0Npc0cNCiMgQVFRQmdqY0NBUXN4RGpBTUJnb3JCZ0VFQVlJM0FnRVZNQzhHQ1NxR1NJYjNEUUVKQkRFaUJDREtRZVNrNmptZA0KIyB0ZWFBRStJWDBtL3hiQ0lsbVpCL3F5TVdBWnhWM1FhWm5EQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0FnQUJ2Uk44DQojIDZEOVRRelcwOUY4UjBZeFRCWk1WcElXbVZMa3NFZU5tNkhHZzZhZXlPZXBTNkNYRXBlV1YwTzd5UHlJMmJHcWgNCiMgdVVFUlNUTG9mY0tnMkhwWGJJbGJqZEhLenJncHF0aDZweXlZdXhDMTJFR2laa3hMOGpLNk5vcjhYU24rc21VVQ0KIyBDUHFBN3d1L2lSTWYweHpjZ0RRVFFTMyt4MXNFTEpaWGNtT2psR0RlMFAxZVNRUi9oNmNuczJHdGtSUFFoNUFKDQojIG41UnhMelYrb2xOTmRwREVtdlB2L2U2OGg1Myt6NmRoaGhKdXEvNlJvcWZ2Rlk2MFRMcUtkWmo2T1lTbnZJL3QNCiMgYWVDWEppL2t3Tk9iV2lMZC8yZGxYNnJPNTNpTmUwOG9vTDEwZnBnVm9MdE5ESzNtTlhJSFBrbVZDK1M3RnV4aw0KIyB0M21lZE5LTTFuSmdBWUZ1dVJGc3dLVmxTSDFpUnV5WE1PQ00yeXVIemxBbU9McXB5N0ZHR0N5OHNYK1JPbVVrDQojIEtFeW8rVkpwVEVNOWQ3WHFTekNsLzdVWE5PMFBHOUFSbTk4L0Z3RGFRVlR5WENXdkt3MjN2TG5Wd01tN0pORzcNCiMgNGlJYmw1cmxyRlU0Z1g3aVRsOUZxejFWSCtiRGFGMjlkcnR0VDV4bDlkcEtaYXFTOFM3STRwZ05rQ1VscDNmdg0KIyBOelFNbXV0dStZV3crVFY0Q0hzV2lzK1NkVDBOVnBvVHo2NVF1WFVnd1ZEQjNWalNCUURobUZRSmhqa1Mzem5nDQojIERSdnhQRUx5dzlUNlo1TEN0cDlOR29DTThXci9nQjZWZ1BBRFhxWHFMQW5nUFo5NWUrVU1sNElpcFkrWWhPak0NCiMgNjZkWjF6Sk5KZk84bDBWa2RyK2hvQkszYmduK3htRFp4SHBqMktHQ0RYNHdnZzE2QmdvckJnRUVBWUkzQXdNQg0KIyBNWUlOYWpDQ0RXWUdDU3FHU0liM0RRRUhBcUNDRFZjd2dnMVRBZ0VETVE4d0RRWUpZSVpJQVdVREJBSUJCUUF3DQojIGVBWUxLb1pJaHZjTkFRa1FBUVNnYVFSbk1HVUNBUUVHQ1dDR1NBR0cvV3dIQVRBeE1BMEdDV0NHU0FGbEF3UUMNCiMgQVFVQUJDQ3o5ejhFVjVTaDBZR3hBSW85aXhEWE1jd3hFcUlmam01NThGMitaaUJ5MWdJUkFLWTMvcHFkamc1Qw0KIyBUNW5nT2V1RU82OFlEekl3TWpFd056RTFNVE0wTWpFd1dxQ0NDamN3Z2dUK01JSUQ1cUFEQWdFQ0FoQU5Ra3JnDQojIHZqcUkvMkJBSWM0VUFQRGRNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXhDekFKQmdOVkJBWVRBbFZUTVJVd0V3WUQNCiMgVlFRS0V3eEVhV2RwUTJWeWRDQkpibU14R1RBWEJnTlZCQXNURUhkM2R5NWthV2RwWTJWeWRDNWpiMjB4TVRBdg0KIyBCZ05WQkFNVEtFUnBaMmxEWlhKMElGTklRVElnUVhOemRYSmxaQ0JKUkNCVWFXMWxjM1JoYlhCcGJtY2dRMEV3DQojIEhoY05NakV3TVRBeE1EQXdNREF3V2hjTk16RXdNVEEyTURBd01EQXdXakJJTVFzd0NRWURWUVFHRXdKVlV6RVgNCiMgTUJVR0ExVUVDaE1PUkdsbmFVTmxjblFzSUVsdVl5NHhJREFlQmdOVkJBTVRGMFJwWjJsRFpYSjBJRlJwYldWeg0KIyBkR0Z0Y0NBeU1ESXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXd1WmhoR2ZGDQojIGl2VU5DS1JGeW1OclVkYzZFVUs5Q25WMVRaUzBERkMxSmhEK0hjaHZrV3NNbHVjYVhFanZST1cvbTJITkZaRmkNCiMgV3JqL1p3dWNZLzAyYW9INktmamRLM0NGM2dJWTgzaHR2SDM1eDIwSlBiNXFkb2ZwaXIzNGhGMGVkc25reG5aMg0KIyBPbFBSMGROYU5vL0dvK0V2R3pxM1lkWno3RTV0TTRwOFhVVXRTN0ZRNWtFNk4xYUczSk1qamZkUUplaGs1dDNUDQojIGp5OVh0WWNnNnc2T0xOVWoydlJOZUViakE0TXhLVXBjRERHS1NveUl4ZmN3V3ZrVXJ4VmZiRU5KQ2YwbUkxUDINCiMgaldQb0dxdGJzUjB3d3B0cGdyVGIvRlpVdkIraGg2dStlbHNLSUM5TENjbVZwNDJ5K3RaamkwNmxjaHp1bjNvQg0KIyBjL2daMXY0TlNZUzlBUUlEQVFBQm80SUJ1RENDQWJRd0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCDQojIC93UUNNQUF3RmdZRFZSMGxBUUgvQkF3d0NnWUlLd1lCQlFVSEF3Z3dRUVlEVlIwZ0JEb3dPREEyQmdsZ2hrZ0INCiMgaHYxc0J3RXdLVEFuQmdnckJnRUZCUWNDQVJZYmFIUjBjRG92TDNkM2R5NWthV2RwWTJWeWRDNWpiMjB2UTFCVA0KIyBNQjhHQTFVZEl3UVlNQmFBRlBTMjRTQWQvaW11MHVSaHBiS2lKYkxJRnpWdU1CMEdBMVVkRGdRV0JCUTJSSWFPDQojIHBMcXdacjY4S0MwZFJEYmQ0MnA2dkRCeEJnTlZIUjhFYWpCb01ES2dNS0F1aGl4b2RIUndPaTh2WTNKc015NWsNCiMgYVdkcFkyVnlkQzVqYjIwdmMyaGhNaTFoYzNOMWNtVmtMWFJ6TG1OeWJEQXlvRENnTG9Zc2FIUjBjRG92TDJOeQ0KIyBiRFF1WkdsbmFXTmxjblF1WTI5dEwzTm9ZVEl0WVhOemRYSmxaQzEwY3k1amNtd3dnWVVHQ0NzR0FRVUZCd0VCDQojIEJIa3dkekFrQmdnckJnRUZCUWN3QVlZWWFIUjBjRG92TDI5amMzQXVaR2xuYVdObGNuUXVZMjl0TUU4R0NDc0cNCiMgQVFVRkJ6QUNoa05vZEhSd09pOHZZMkZqWlhKMGN5NWthV2RwWTJWeWRDNWpiMjB2UkdsbmFVTmxjblJUU0VFeQ0KIyBRWE56ZFhKbFpFbEVWR2x0WlhOMFlXMXdhVzVuUTBFdVkzSjBNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJJDQojIEhOeTE2Wm9qdk9jYTV5QU9qbWRHL1VKeVVYUUtJMGVqcTVMU0pjUndXYjRVb09VbmdhVk5GQlVaQjNudzBRVEQNCiMgaHRrN3ZmNUVBbVpON1dta0QvYTRjTTlpNlBWUlNuaDVObm9udC9QblVwK1RwKzFEbm52bnROMUJJb243aDZKRw0KIyBBMDc4OVA2M1pIZGpYeU5TYVlPQytocFQ3WkRNamFFWGN3MzA4MlU1Y0V2em5OWjZlOW9NdkQweTBCdkw5V0g4DQojIGRRZ0FkcnlCRHZqQTRWelB4QkZ5NXh0a1NkZ2ltblVWUXZVdE1qaUIydlJnb3JxMFV2dGM0R0VrSlUreTM4a3ANCiMgcUhORFVkcTlZOVlmVzV2M0xodFBFeDMzU2cxeGZwZTM5RCtFNjhIam8wbWgrczZudjFiUHVsbDJZWWxmZnFlMA0KIyBqbWQ0K1RhWTRjc28ybHVIcG9vdk1JSUZNVENDQkJtZ0F3SUJBZ0lRQ3FFbDF0WXlHMzVCNUFYYU5wZkNGVEFODQojIEJna3Foa2lHOXcwQkFRc0ZBREJsTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWcNCiMgU1c1ak1Sa3dGd1lEVlFRTEV4QjNkM2N1WkdsbmFXTmxjblF1WTI5dE1TUXdJZ1lEVlFRREV4dEVhV2RwUTJWeQ0KIyBkQ0JCYzNOMWNtVmtJRWxFSUZKdmIzUWdRMEV3SGhjTk1UWXdNVEEzTVRJd01EQXdXaGNOTXpFd01UQTNNVEl3DQojIE1EQXdXakJ5TVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVJrd0Z3WUQNCiMgVlFRTEV4QjNkM2N1WkdsbmFXTmxjblF1WTI5dE1URXdMd1lEVlFRREV5aEVhV2RwUTJWeWRDQlRTRUV5SUVGeg0KIyBjM1Z5WldRZ1NVUWdWR2x0WlhOMFlXMXdhVzVuSUVOQk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBDQojIE1JSUJDZ0tDQVFFQXZkQXk3a3ZOajMvZHFicUNtY1U1VkNoWHRpTkt4QTRIUlROUkVIM1ErWDFOYUg3bnRxRDANCiMgamJPSTVKZS9ZeUdRbUw4VHZGZlR3K0YrQ05acUZBQTQ5eTRlTys3TXB2WXlXZjVmWlQvZ20rdmpSa2NHR2xWKw0KIyBDeWQrd0tMMW9PRGVJajhPLzM2VisvT2p1aUkrR0t3UjVQQ1pBMjA3aFh3SjArNWR5Sm9MVk9Pb0NYRnI0TThpDQojIEVBOTF6M0Z5VGdxdDMwQTZYTGRSNGFGNUZNWk5KQ013WGJ6c1BHQnFyQzhIelAzdzZrZlppRkJlL1dadVZtRW4NCiMgS1ltRVVlYUM1MFpRL1pRcUxLZmtkVDY2bUErRWY1OHhGTmF0MWZKa3kzc2VCZENFR1hJWDhSY0c3ejNOMWszdg0KIyBCa0w5b2xNcVQ0VWR4QjA4cjgvYXJCRDEzYXlzNlZiL2t3SURBUUFCbzRJQnpqQ0NBY293SFFZRFZSME9CQllFDQojIEZQUzI0U0FkL2ltdTB1UmhwYktpSmJMSUZ6VnVNQjhHQTFVZEl3UVlNQmFBRkVYcm9xLzBrc3VDTVMxUmk2ZW4NCiMgSVozemJjZ1BNQklHQTFVZEV3RUIvd1FJTUFZQkFmOENBUUF3RGdZRFZSMFBBUUgvQkFRREFnR0dNQk1HQTFVZA0KIyBKUVFNTUFvR0NDc0dBUVVGQndNSU1Ia0dDQ3NHQVFVRkJ3RUJCRzB3YXpBa0JnZ3JCZ0VGQlFjd0FZWVlhSFIwDQojIGNEb3ZMMjlqYzNBdVpHbG5hV05sY25RdVkyOXRNRU1HQ0NzR0FRVUZCekFDaGpkb2RIUndPaTh2WTJGalpYSjANCiMgY3k1a2FXZHBZMlZ5ZEM1amIyMHZSR2xuYVVObGNuUkJjM04xY21Wa1NVUlNiMjkwUTBFdVkzSjBNSUdCQmdOVg0KIyBIUjhFZWpCNE1EcWdPS0EyaGpSb2RIUndPaTh2WTNKc05DNWthV2RwWTJWeWRDNWpiMjB2UkdsbmFVTmxjblJCDQojIGMzTjFjbVZrU1VSU2IyOTBRMEV1WTNKc01EcWdPS0EyaGpSb2RIUndPaTh2WTNKc015NWthV2RwWTJWeWRDNWoNCiMgYjIwdlJHbG5hVU5sY25SQmMzTjFjbVZrU1VSU2IyOTBRMEV1WTNKc01GQUdBMVVkSUFSSk1FY3dPQVlLWUlaSQ0KIyBBWWI5YkFBQ0JEQXFNQ2dHQ0NzR0FRVUZCd0lCRmh4b2RIUndjem92TDNkM2R5NWthV2RwWTJWeWRDNWpiMjB2DQojIFExQlRNQXNHQ1dDR1NBR0cvV3dIQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWNaVVM2VkdIVm1uTjc5M2ENCiMgZktwamVyTjR6d1kzUUlUdlM0Uy95czhEQXYzRnA4TU9JRUlzcjNmekt4OE1JVm9xdHdVMEhXcXVtZmdub21hLw0KIyBDYXBnMzNha09wTVArTExSMkh3Wll1aGVnaVVleExvY2V5d2g0dFpiTEJRMVF3Um9zdHQxQXVCeXg1aldQR1RsDQojIEgwZ1FHRitKT0dGTllrWWtoMk9Na1ZJc3J5bUo1WGdmMWdzVXBZRFhFa2R3czNYVms0V1RmcmFTWi90VFlZbW8NCiMgOVd1V3dQUllhUTE4eUFHeHVTaDF0NWxqaFNLTVljcDVsSDVaL0l3UDQyKzFBU2EyYktYdWgxRWg1RmhnbTdvTQ0KIyBMU3R0b3NSK3U4UWxLMGNDQ0h4SnJoTzI0WHhDUWlqR0dGYlBRVFMyWmwyMmRIdjFWak1pTHlJMnNrdWlTcFhZDQojIDlhYU9VakdDQW9Zd2dnS0NBZ0VCTUlHR01ISXhDekFKQmdOVkJBWVRBbFZUTVJVd0V3WURWUVFLRXd4RWFXZHANCiMgUTJWeWRDQkpibU14R1RBWEJnTlZCQXNURUhkM2R5NWthV2RwWTJWeWRDNWpiMjB4TVRBdkJnTlZCQU1US0VScA0KIyBaMmxEWlhKMElGTklRVElnUVhOemRYSmxaQ0JKUkNCVWFXMWxjM1JoYlhCcGJtY2dRMEVDRUExQ1N1QytPb2ovDQojIFlFQWh6aFFBOE4wd0RRWUpZSVpJQVdVREJBSUJCUUNnZ2RFd0dnWUpLb1pJaHZjTkFRa0RNUTBHQ3lxR1NJYjMNCiMgRFFFSkVBRUVNQndHQ1NxR1NJYjNEUUVKQlRFUEZ3MHlNVEEzTVRVeE16UXlNVEJhTUNzR0N5cUdTSWIzRFFFSg0KIyBFQUlNTVJ3d0dqQVlNQllFRk9IWGdxamhrYjd2YThvV2tiV3F0SlNtSkp2ek1DOEdDU3FHU0liM0RRRUpCREVpDQojIEJDQ1B0SjE2eWtkRk1QczJoL1ZCaS9MejEyWmFSUG5kQWNJZHpoZVlHRmZpV1RBM0Jnc3Foa2lHOXcwQkNSQUMNCiMgTHpFb01DWXdKREFpQkNDekVKQUd2QXJaZ3dlUlZ5bmdSQU5CWElQaktTdGhUeWFXVEkwMWNlejFxVEFOQmdrcQ0KIyBoa2lHOXcwQkFRRUZBQVNDQVFBY05hZk1vVXJIUld0d1JkZ0tLZW1sNXdOU1VGS0oxaVpBM25HRzJ1LzVyOEg5DQojIEVzVm40by9MUUhYMUVVSC9URmt3aGFIWGIvOW9sTEE2VU9uNXMrbUlJRldnekl4ZUNuS0hFVlk0OVNwcUtMeUwNCiMgdjZBVTZpZUxTc01BaVo0MGdadE1QdFQxcXhVVHB5TTM4bU95cDZJYmJGMENKaXBoOHpnZDFwWTU0U055MlJhVw0KIyBwR2JZV2NHcEhTNm9mQTBFbUNzSW54aFZmUDJrVkZIVEp6Z1ZOOUdTZTNJeFNzdDYrcjZva013OTUxMmgrREhyDQojIHJWbUlScmxQU1ZUUWlsS053dVBmKzFwWThiNlRtQ0dIT0VML216cU03N2ZkeWxMUms2Z3krbGRQYm4wQy8vZ0wNCiMgY2VESEJ2R2k2NjFQWll5SFNQTGlkeWthQklyT25ZMDQzb015Q3lpWQ0KIyBTSUcgIyBFbmQgc2lnbmF0dXJlIGJsb2NrDQo="}}}