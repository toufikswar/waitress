{"id": "Get_Application_Crash_Details_windows", "name": "Get Application Crash Details", "description": "Provides the error information obtained from Get-WinEvent for the application name provided via parameter.", "purpose": ["DATA_COLLECTION"], "targeting": {"apiEnabled": true, "manualEnabled": true, "manualAllowMultipleDevices": false}, "scriptInfo": {"runAs": "LOCAL_SYSTEM", "timeoutSeconds": 120, "inputs": [{"description": "Name of the application. It has to be the exact executable name", "id": "ApplicationName", "name": "ApplicationName", "allowCustomValue": true, "options": ["-"], "usedByWindows": true, "usedByMacOs": false}], "outputs": [{"description": "Date when the error was recorded", "id": "ErrorDate", "name": "ErrorDate", "type": "datetime", "usedByWindows": true, "usedByMacOs": false}, {"description": "Name of the application with its version", "id": "AppName", "name": "AppName", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Path to the fault app", "id": "FaultAppPath", "name": "FaultAppPath", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Name of the module that was also affected", "id": "ModuleName", "name": "ModuleName", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "Path to the fault module", "id": "FaultModulePath", "name": "FaultModulePath", "type": "string", "usedByWindows": true, "usedByMacOs": false}, {"description": "The exception code obtained", "id": "Exception", "name": "Exception", "type": "string", "usedByWindows": true, "usedByMacOs": false}], "scriptWindows": {"name": "Get-ApplicationCrashDetails.ps1", "script": ""}}}